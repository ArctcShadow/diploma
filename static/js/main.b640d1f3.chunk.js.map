{"version":3,"sources":["lib/db.ts","lib/theme.ts","actions/AppEventsActions.ts","dispatchers/AppEventsDispatcher.ts","actions/KanbanBoardActions.ts","dispatchers/KanbanBoardDispatcher.ts","lib/gensym.ts","components/TextInputDialog.tsx","components/AppDrawer.tsx","lib/datetime.ts","components/ConfirmDialog.tsx","lib/csv.ts","components/KanbanDialog.tsx","data/initial-data.ts","states/KanbanBoardState.ts","actions/CalendarActions.ts","states/CalendarState.ts","states/AppEventsState.ts","store.ts","views/KanbanBoardView.tsx","dispatchers/CalendarViewDispatcher.ts","views/CalendarView.tsx","lib/validation.ts","views/EditorView.tsx","views/SettingsView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["dbBaseName","window","location","pathname","replace","PouchDB","plugin","PouchDBFind","remoteDb","rep","localDb","auto_compaction","localConfigDb","startSync","a","allDocs","localDocs","remoteDocs","idSet","Set","rows","doc","add","id","sync","live","retry","doc_ids","Array","from","values","on","change","info","err","restartSync","cancel","e","setRemoteDb","url","user","password","close","match","auth","username","getLocalDb","isDark","matchMedia","matches","theme","createMuiTheme","palette","type","primary","main","blue","secondary","pink","actionCreator","actionCreatorFactory","updateAppConfig","async","resetApplication","appEventsActions","showAlertDialog","closeAlertDialog","startUpdateAppConfig","started","doneUpdateAppConfig","done","failedUpdateAppConfig","failed","startResetApplication","doneResetApplication","failedResetApplication","mapDispatchToProps","dispatch","v","mapStateToProps","appState","Object","assign","appEvents","addBoard","changeActiveBoard","updateBoardName","deleteBoard","addStikey","updateStikey","updateStikeyLanes","archiveStikey","deleteStikey","editBoardAndStikeys","kanbanBoardActions","startAddBoard","doneAddBoard","failedAddBoard","startChangeActiveBoard","doneChangeActiveBoard","failedChangeActiveBoard","startUpdateBoardName","doneUpdateBoardName","failedUpdateBoardName","startDeleteBoard","doneDeleteBoard","failedDeleteBoard","startAddStikey","doneAddStikey","failedAddStikey","startUpdateStikey","doneUpdateStikey","failedUpdateStikey","startUpdateStikeyLanes","doneUpdateStikeyLanes","failedUpdateStikeyLanes","startArchiveStikey","doneArchiveStikey","failedArchiveStikey","startDeleteStikey","doneDeleteStikey","failedDeleteStikey","startEditBoardAndStikeys","doneEditBoardAndStikeys","failedEditBoardAndStikeys","boardName","boardId","kanbanId","kanbanBoard","gensymSeed","gensym","TextInputDialog","props","useTheme","React","useState","open","setOpen","value","setValue","formDialogTitleId","handleCancelClick","onClose","Dialog","aria-labelledby","DialogTitle","title","DialogContent","message","DialogContentText","TextField","autoFocus","margin","label","fieldLabel","fullWidth","error","validator","onChange","event","target","DialogActions","Button","variant","color","onClick","style","marginLeft","spacing","cancelButtonCaption","colorIsSecondary","disabled","applyButtonCaption","useStyles","makeStyles","drawer","width","flexShrink","whiteSpace","drawerOpen","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerClose","leavingScreen","overflowX","breakpoints","up","nested","paddingLeft","withRouter","connect","classes","trim","length","apply","setTextInputOpen","textInputOpen","boardsOpen","setBoardsOpen","handleChangeView","viewName","activeBoardId","history","push","currentView","startsWith","Drawer","className","clsx","paper","anchor","IconButton","Divider","List","component","subheader","ListSubheader","ListItem","button","Collapse","in","timeout","unmountOnExit","disablePadding","boards","map","x","key","_id","selected","fontWeight","ev","view","handleClickChangeActiveBoard","ListItemText","name","ListItemIcon","formatDate","d","String","getFullYear","padStart","getMonth","getDate","parseISODate","s","m","Date","Number","ConfirmDialog","inputValue","setInputValue","fab","textAlign","split","index","arr","confirmingTextValue","confirmingTextLabel","marginRight","marginBottom","singleButton","$s","getStringParsers","rawToToken","rawToken","concatTokens","tokens","reduce","b","seq","cls","notCls","cat","repeat","end","first","combine","erase","trans","ahead","quoted","input","spaceWithinSingleLine","nakid","cell","row","newline","parse","z","parserInput","succeeded","Error","formControl","minWidth","icon","fontSize","fabDelete","position","right","top","KanbanDialog","confirmOpen","setConfirmOpen","record","description","setDescription","barcode","setBarcode","memo","setMemo","tags","includes","join","setTags","flags","setFlags","dueDate","setDueDate","taskStatus","setTaskStatus","teamOrStory","setTeamOrStory","taskStatusesId","teamOrStoryId","onCancel","handleTagsChange","handleFlagsChange","paddingBottom","board","preferArchive","Typography","utils","DateFnsUtils","multiline","rowsMax","helperText","format","KeyboardButtonProps","date","FormControl","marginTop","InputLabel","htmlFor","Select","inputProps","taskStatuses","MenuItem","caption","teamOrStories","displayTags","displayFlags","displayBarcode","displayMemo","tagsTrimmed","tagsParsed","parseCsv","flagsTrimmed","flagsParsed","onApply","filter","isNaN","getTime","Fab","size","aria-label","onArchive","onDelete","initialData","kanbanBoardReducer","getKanbanBoardReducer","db","resp","include_docs","data","bulkDocs","postRespBoards","now","records","rec","sort","toLocaleLowerCase","initialState","activeBoard","activeBoardIndex","reducerWithInitialState","case","state","payload","boardStyle","calendarStyle","post","then","saved","_rev","rev","concat","getConstructedAppStore","params","result","setTimeout","catch","arg","alert","get","find","selector","docs","findIndex","slice","dbBoard","put","remove","taskStatusValue","teamOrStoryValue","recordsNew","recDb","recNew","calendarActions","showToday","showNextMonth","showPreviousMonth","showNextYear","showPreviousYear","calendarReducer","getCalendarReducer","activeMonth","appEventsReducer","getAppEventsReducer","confDb","remoteDbUrl","remoteDbUser","remoteDbPassword","alertDialog","appConfig","remote","endpointUrl","newConf","destroy","createHashHistory","hashType","store","getAppStore","createStore","combineReducers","connectRouter","router","calendar","compose","applyMiddleware","routerMiddleware","root","smallIcon","height","mapNeverStateToProps","firefox","navigator","userAgent","toLowerCase","indexOf","Stikey","today","expired","completed","data-record-id","draggable","onDragStart","dataTransfer","setData","matched","q","dangerouslySetInnerHTML","__html","marked","Qr","fill","fillColor","cellSize","unit","toImgTag","Stikeys","data-status","data-team-or-story","onDragOver","preventDefault","onDrop","elId","getData","el","document","getElementById","dataset","recordId","currentState","getState","align","cursor","textDecoration","padding","kanbanBoardState","flexGrow","backgroundColor","border","borderCollapse","tableLayout","calendarTitle","calendarTitleToolBar","left","overflow","calendarTopLeftHeader","calendarDaysHeader","calendarSundayHeader","calendarSaturdayHeader","calendarCell","verticalAlign","calendarWeekendCell","chip","borderRadius","textOverflow","paddingRight","chipWrap","CalendarItem","month","firstDateOfMonth","lastDateOfMonth","firstDateOfCal","getDay","lastDateOfCal","nextCalDate","dates","week","wd","stikeys","display","toLocaleDateString","userLanguage","language","browserLanguage","year","toISOString","paddingTop","minHeight","next","pickEditableBoardProps","stikey","validateBoardProps","isArray","forEach","validateStikeyProps","header","codemirror","fabSave","confirmDeletingOpen","setConfirmDeletingOpen","editorValue","setEditorValue","editCount","setEditCount","jsYaml","safeLoad","safeDump","lineWidth","options","mode","lineNumbers","lineWrapping","editor","conf","confirmResetAppOpen","setConfirmResetAppOpen","validateConfigProps","app","CssBaseline","ThemeProvider","path","exact","KanbanBoardView","CalendarView","EditorView","SettingsView","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b640d1f3.chunk.js","sourcesContent":["import PouchDB     from 'pouchdb-browser';\nimport PouchDBFind from 'pouchdb-find';\n\n\n//назва бази\nconst dbBaseName = window.location.pathname.replace(/\\//g, '_');\n//плагін надсилання запитів\nPouchDB.plugin(PouchDBFind);\n//змінні синхронізації з віддаленою базою\nlet remoteDb: PouchDB.Database | null = null;\nlet rep: PouchDB.Replication.Sync<{}> | null = null;\n//локальна база\nconst localDb = new PouchDB(`kanban-board-v1@${dbBaseName}`, { auto_compaction: true });\nconst localConfigDb = new PouchDB(`kanban-board-config-v1@${dbBaseName}`, { auto_compaction: true });\n\n//функція синхронізації локальної та віддаленої\nasync function startSync() {\n    if (remoteDb) {\n        const localDocs = await localDb.allDocs({});\n        const remoteDocs = remoteDb ? await remoteDb.allDocs({}) : null;\n        const idSet = new Set<string>();\n        for (const doc of localDocs.rows) {\n            idSet.add(doc.id);\n        }\n        if (remoteDocs) {\n            for (const doc of remoteDocs.rows) {\n                idSet.add(doc.id);\n            }\n        }\n\n        rep = localDb.sync(remoteDb, {\n            live: true,\n            retry: true,\n            doc_ids: Array.from(idSet.values()),\n        })\n        .on('change', change => {\n            \n        })\n        .on('paused', info => {\n            \n        })\n        .on('active' as any, info => {\n            \n        })\n        .on('complete', info => {\n            \n        })\n        .on('error', err => {\n            \n        });\n    }\n}\n\n//перезапуск\nexport async function restartSync() {\n    if (rep) {\n        try {\n            rep.cancel();\n        } catch (e) {\n            \n        }\n        rep = null;\n    }\n\n    await startSync();\n}\n\n//Встановлення віддаленої бази\nexport async function setRemoteDb(url: string, user: string, password: string) {\n    if (rep) {\n        try {\n            rep.cancel();\n        } catch (e) {\n            \n        }\n        rep = null;\n    }\n    if (remoteDb) {\n        try {\n            await remoteDb.close();\n        } catch (e) {\n            \n        }\n        remoteDb = null;\n    }\n\n    if (url && url.match(/^https?:\\/\\//)) {\n        remoteDb = new PouchDB(url, {\n            auth: {\n                username: user,\n                password: password,\n            },\n        });\n\n        await startSync();\n    }\n}\n\n//база даних\nexport function getLocalDb() {\n    return localDb;\n}\n//конфіг\nexport function getLocalConfigDb() {\n    return localConfigDb;\n}\n\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { blue, pink }     from '@material-ui/core/colors';\n\n\n//світла-темна тема залежно від теми браузера (не налаштовані кольори, починити)\nexport const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\nexport const theme = createMuiTheme({\n    palette: isDark ? {\n        type: 'dark',\n        primary: {\n            main: blue[500],\n        },\n        secondary: {\n            main: pink[500],\n        },\n    } : {\n        type: 'light',\n        primary: {\n            main: blue[500],\n        },\n        secondary: {\n            main: pink[500],\n        },\n    },\n});\n","import actionCreatorFactory,\n       { Action }             from 'typescript-fsa';\nimport { AppConfig,\n         ConfirmDialogProps,\n         AppEventsState }     from '../types';\n\n\n// інтерфейс дій\nexport interface AppEventsActions {\n    showAlertDialog: (v: ConfirmDialogProps) =>\n        Action<ConfirmDialogProps>;\n    closeAlertDialog: () =>\n        Action<void>;\n\n    updateAppConfig: (v: AppConfig) =>\n        Action<AppConfig>;\n    resetApplication: () =>\n        Action<void>;\n}\n\n//методи для створення дій додатку\nconst actionCreator = actionCreatorFactory();\n\n\nconst updateAppConfig =\n    actionCreator.async<AppConfig, AppEventsState, Error>('ACTIONS_UPDATE_APP_CONFIG');\nconst resetApplication =\n    actionCreator.async<void, AppEventsState, Error>('ACTIONS_RESET_APPLICATION');\n\n//опис функцій додатку та всі можливі дії\nexport const appEventsActions = {\n    showAlertDialog: actionCreator<ConfirmDialogProps>('ACTIONS_SHOW_ALERT_DIALOG'),\n    closeAlertDialog: actionCreator<void>('ACTIONS_CLOSE_ALERT_DIALOG'),\n\n    startUpdateAppConfig: updateAppConfig.started,\n    doneUpdateAppConfig: updateAppConfig.done,\n    failedUpdateAppConfig: updateAppConfig.failed,\n\n    startResetApplication: resetApplication.started,\n    doneResetApplication: resetApplication.done,\n    failedResetApplication: resetApplication.failed,\n};\n","import { Action }             from 'typescript-fsa';\nimport { Dispatch }           from 'redux';\nimport { AppConfig,\n         ConfirmDialogProps,\n         AppState }           from '../types';\nimport { AppEventsActions as AppEventsActions_,\n         appEventsActions }   from '../actions/AppEventsActions';\n\n\n\nexport type AppEventsActions = AppEventsActions_;\n\n//зв'язок додатку з redux store\nexport function mapDispatchToProps(dispatch: Dispatch<Action<any>>) {\n    return {\n        showAlertDialog: (v: ConfirmDialogProps) =>\n            dispatch(appEventsActions.showAlertDialog(v)),\n        closeAlertDialog: () =>\n            dispatch(appEventsActions.closeAlertDialog()),\n\n        updateAppConfig: (v: AppConfig) =>\n            dispatch(appEventsActions.startUpdateAppConfig(v)),\n        resetApplication: () =>\n            dispatch(appEventsActions.startResetApplication()),\n    }\n}\n\n\nexport function mapStateToProps(appState: AppState) {\n    return Object.assign({}, appState.appEvents);\n}\n","import actionCreatorFactory,\n       { Action }                  from 'typescript-fsa';\nimport { KanbanBoardState,\n         KanbanBoardRecord,\n         KanbanRecord,\n         UpdateStikeyLanesPayload,\n         ConfirmDialogProps }      from '../types';\n\n\n//інтерфейс дій додатку з дошками\nexport interface KanbanBoardActions {\n    addBoard: (boardName: string) =>\n        Action<{boardName: string}>;\n    changeActiveBoard: (id: string) =>\n        Action<{boardId: string}>;\n    updateBoardName: (v: {boardId: string, boardName: string}) =>\n        Action<{boardId: string, boardName: string}>;\n    deleteBoard: (id: string) =>\n        Action<{boardId: string}>;\n\n    addStikey: () =>\n        Action<{}>;\n    updateStikey: (v: KanbanRecord) =>\n        Action<KanbanRecord>;\n    updateStikeyLanes: (v: UpdateStikeyLanesPayload) =>\n        Action<UpdateStikeyLanesPayload>;\n    archiveStikey: (kanbanId: string) =>\n        Action<{kanbanId: string}>;\n    deleteStikey: (kanbanId: string) =>\n        Action<{kanbanId: string}>;\n\n    editBoardAndStikeys: (v: KanbanBoardRecord) =>\n        Action<KanbanBoardRecord>;\n\n    // методи сповіщень для полотна дошок\n    showAlertDialog: (v: ConfirmDialogProps) =>\n        Action<ConfirmDialogProps>;\n    closeAlertDialog: () =>\n        Action<void>;\n}\n\n//усі методи для дошок та карток та їх опис\nconst actionCreator = actionCreatorFactory();\n\n\nconst addBoard =\n    actionCreator.async<{boardName: string}, KanbanBoardState, Error>('ACTIONS_ADD_BOARD');\nconst changeActiveBoard =\n    actionCreator.async<{boardId: string}, KanbanBoardState, Error>('ACTIONS_CHANGE_ACTIVE_BOARD');\nconst updateBoardName =\n    actionCreator.async<{boardId: string, boardName: string}, KanbanBoardState, Error>('ACTIONS_UPDATE_BOARD_NAME');\nconst deleteBoard =\n    actionCreator.async<{boardId: string}, KanbanBoardState, Error>('ACTIONS_DELETE_BOARD');\n\nconst addStikey =\n    actionCreator.async<{}, KanbanBoardState, Error>('ACTIONS_ADD_STIKEY');\nconst updateStikey =\n    actionCreator.async<KanbanRecord, KanbanBoardState, Error>('ACTIONS_UPDATE_STIKEY');\nconst updateStikeyLanes =\n    actionCreator.async<UpdateStikeyLanesPayload, KanbanBoardState, Error>('ACTIONS_UPDATE_STIKEY_LANES');\nconst archiveStikey =\n    actionCreator.async<{kanbanId: string}, KanbanBoardState, Error>('ACTIONS_ARCHIVE_STIKEY');\nconst deleteStikey =\n    actionCreator.async<{kanbanId: string}, KanbanBoardState, Error>('ACTIONS_DELETE_STIKEY');\n\nconst editBoardAndStikeys =\n    actionCreator.async<KanbanBoardRecord, KanbanBoardState, Error>('ACTIONS_EDIT_BOARD_AND_STIKEYS');\n\n\nexport const kanbanBoardActions = {\n    startAddBoard: addBoard.started,\n    doneAddBoard: addBoard.done,\n    failedAddBoard: addBoard.failed,\n\n    startChangeActiveBoard: changeActiveBoard.started,\n    doneChangeActiveBoard: changeActiveBoard.done,\n    failedChangeActiveBoard: changeActiveBoard.failed,\n\n    startUpdateBoardName: updateBoardName.started,\n    doneUpdateBoardName: updateBoardName.done,\n    failedUpdateBoardName: updateBoardName.failed,\n\n    startDeleteBoard: deleteBoard.started,\n    doneDeleteBoard: deleteBoard.done,\n    failedDeleteBoard: deleteBoard.failed,\n\n    startAddStikey: addStikey.started,\n    doneAddStikey: addStikey.done,\n    failedAddStikey: addStikey.failed,\n\n    startUpdateStikey: updateStikey.started,\n    doneUpdateStikey: updateStikey.done,\n    failedUpdateStikey: updateStikey.failed,\n\n    startUpdateStikeyLanes: updateStikeyLanes.started,\n    doneUpdateStikeyLanes: updateStikeyLanes.done,\n    failedUpdateStikeyLanes: updateStikeyLanes.failed,\n\n    startArchiveStikey: archiveStikey.started,\n    doneArchiveStikey: archiveStikey.done,\n    failedArchiveStikey: archiveStikey.failed,\n\n    startDeleteStikey: deleteStikey.started,\n    doneDeleteStikey: deleteStikey.done,\n    failedDeleteStikey: deleteStikey.failed,\n\n    startEditBoardAndStikeys: editBoardAndStikeys.started,\n    doneEditBoardAndStikeys: editBoardAndStikeys.done,\n    failedEditBoardAndStikeys: editBoardAndStikeys.failed,\n};\n","import { Action }             from 'typescript-fsa';\nimport { Dispatch }           from 'redux';\nimport { KanbanBoardRecord,\n         KanbanRecord,\n         UpdateStikeyLanesPayload,\n         ConfirmDialogProps,\n         AppState }           from '../types';\nimport { AppEventsActions as AppEventsActions_,\n         appEventsActions } from '../actions/AppEventsActions';\nimport { KanbanBoardActions as KanbanBoardActions_,\n         kanbanBoardActions } from '../actions/KanbanBoardActions';\n\n\n\nexport type AppEventsActions = AppEventsActions_;\nexport type KanbanBoardActions = KanbanBoardActions_;\n\n//зв'язок додатку з redux store\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action<any>>) {\n    return {\n        addBoard: (boardName: string) =>\n            dispatch(kanbanBoardActions.startAddBoard({ boardName })),\n        changeActiveBoard: (boardId: string) =>\n            dispatch(kanbanBoardActions.startChangeActiveBoard({ boardId })),\n        updateBoardName: (v: {boardId: string, boardName: string}) =>\n            dispatch(kanbanBoardActions.startUpdateBoardName(v)),\n        deleteBoard: (boardId: string) =>\n            dispatch(kanbanBoardActions.startDeleteBoard({ boardId })),\n\n        addStikey: () =>\n            dispatch(kanbanBoardActions.startAddStikey({})),\n        updateStikey: (v: KanbanRecord) =>\n            dispatch(kanbanBoardActions.startUpdateStikey(v)),\n        updateStikeyLanes: (v: UpdateStikeyLanesPayload) =>\n            dispatch(kanbanBoardActions.startUpdateStikeyLanes(v)),\n        archiveStikey: (kanbanId: string) =>\n            dispatch(kanbanBoardActions.startArchiveStikey({ kanbanId })),\n        deleteStikey: (kanbanId: string) =>\n            dispatch(kanbanBoardActions.startDeleteStikey({ kanbanId })),\n\n        editBoardAndStikeys: (v: KanbanBoardRecord) =>\n            dispatch(kanbanBoardActions.startEditBoardAndStikeys(v)),\n\n        // AppEventsActions\n        showAlertDialog: (v: ConfirmDialogProps) =>\n            dispatch(appEventsActions.showAlertDialog(v)),\n        closeAlertDialog: () =>\n            dispatch(appEventsActions.closeAlertDialog()),\n    };\n}\n\n\nexport function mapStateToProps(appState: AppState) {\n    return Object.assign({}, appState.kanbanBoard);\n}\n","let gensymSeed = 0;\n\nexport default function gensym(): string {\n    return `$$gensym$$_xjKvAjFXoVtro45V_${gensymSeed++}$$`;\n}\n//унікальні значення таблиць","import React                    from 'react';\nimport Button                   from '@material-ui/core/Button';\nimport TextField                from '@material-ui/core/TextField';\nimport Dialog                   from '@material-ui/core/Dialog';\nimport DialogActions            from '@material-ui/core/DialogActions';\nimport DialogContent            from '@material-ui/core/DialogContent';\nimport DialogContentText        from '@material-ui/core/DialogContentText';\nimport DialogTitle              from '@material-ui/core/DialogTitle';\nimport CheckIcon                from '@material-ui/icons/Check';\nimport CancelIcon               from '@material-ui/icons/Cancel';\nimport { useTheme }             from '@material-ui/core/styles';\nimport gensym                   from '../lib/gensym';\nimport { TextInputDialogProps } from '../types';\n\n\n    //введення тексту\nconst TextInputDialog: React.FC<TextInputDialogProps> = (props) => {\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(props.open);\n    const [value, setValue] = React.useState(props.value);\n\n    const formDialogTitleId = gensym();\n    //кнопка відміни\n    function handleCancelClick() {\n        setOpen(false);\n        props.onClose(false);\n    }\n    //кнопка підтвердження\n    function handleApplyClick() {\n        setOpen(false);\n        props.onClose(true, value);\n    }\n    //змінна даних\n    function handleValueChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setValue(event.target.value);\n    }\n    //верстка\n    return (\n        <Dialog open={open} onClose={handleCancelClick} aria-labelledby={formDialogTitleId}>\n            <DialogTitle id={formDialogTitleId}>{props.title}</DialogTitle>\n            <DialogContent>\n                {props.message ?\n                    <DialogContentText>{props.message}</DialogContentText> :\n                    <></>\n                }\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label={props.fieldLabel}\n                    fullWidth\n                    value={value}\n                    error={props.validator ? props.validator(value) : false}\n                    onChange={handleValueChange}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant=\"outlined\"\n                    color=\"default\"\n                    onClick={handleCancelClick}>\n                    <CancelIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.cancelButtonCaption || 'Відмінити'}\n                </Button>\n                <Button\n                    variant=\"contained\"\n                    color={props.colorIsSecondary ? 'secondary' : 'primary'}\n                    disabled={props.validator ? props.validator(value) : false}\n                    onClick={handleApplyClick}>\n                    <CheckIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.applyButtonCaption || 'Підтвердити'}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nexport default TextInputDialog;\n","import React                  from 'react';\nimport { connect }            from 'react-redux';\nimport { withRouter,\n         RouteChildrenProps } from 'react-router';\nimport Drawer                 from '@material-ui/core/Drawer';\nimport Divider                from '@material-ui/core/Divider';\nimport IconButton             from '@material-ui/core/IconButton';\nimport ChevronLeftIcon        from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon       from '@material-ui/icons/ChevronRight';\nimport AddBoxIcon             from '@material-ui/icons/AddBox';\nimport TableChartIcon         from '@material-ui/icons/TableChart';\nimport CalendarTodayIcon      from '@material-ui/icons/CalendarToday';\nimport EditIcon               from '@material-ui/icons/Edit';\nimport SettingsIcon           from '@material-ui/icons/Settings';\nimport HelpIcon               from '@material-ui/icons/Help';\nimport ExpandLessIcon         from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon         from '@material-ui/icons/ExpandMore';\nimport Collapse               from '@material-ui/core/Collapse';\nimport List                   from '@material-ui/core/List';\nimport ListSubheader          from '@material-ui/core/ListSubheader';\nimport ListItem               from '@material-ui/core/ListItem';\nimport ListItemIcon           from '@material-ui/core/ListItemIcon';\nimport ListItemText           from '@material-ui/core/ListItemText';\nimport { makeStyles }         from '@material-ui/core/styles';\nimport clsx                   from 'clsx';\nimport { KanbanBoardState }   from '../types';\nimport { mapDispatchToProps,\n         mapStateToProps,\n         KanbanBoardActions } from '../dispatchers/KanbanBoardDispatcher';\nimport TextInputDialog        from '../components/TextInputDialog';\n\n\n\ntype AppDrawerProps = KanbanBoardState & KanbanBoardActions & RouteChildrenProps<{}>;\n\n\nconst drawerWidth = 240;\n//стилі\nconst useStyles = makeStyles(theme => ({\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(6) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(6) + 1,\n        },\n    },\n    nested: {\n        paddingLeft: theme.spacing(4),\n    },\n}));\n\n\nconst AppDrawer: React.FC<AppDrawerProps> = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n    const [textInputOpen, setTextInputOpen] = React.useState({\n        open: false,\n        title: '',\n        message: '',\n        fieldLabel: '',\n        value: '',\n        validator: (value: string) => value.trim().length <= 0,\n        onClose: handleCloseDialogAddNewBoard,\n    });\n    const [boardsOpen, setBoardsOpen] = React.useState(true);\n    //стан випадабчого меню\n    function handleDrawerToggle() {\n        setOpen(!open);\n    }\n    //перехід до іншої сторінки\n    function handleClickChangeActiveBoard(id: string) {\n        let view = 'kanban';\n        if (props.history.location.pathname) {\n            if (props.history.location.pathname.startsWith('/calendar/')) {\n                view = 'calendar';\n            } else if (props.history.location.pathname.startsWith('/edit/')) {\n                view = 'edit';\n            }\n        }\n        props.history.push(`/${view}/${id}`);\n    }\n    //додавання нової дошки\n    function handleClickAddNewBoard() {\n        setTextInputOpen(Object.assign({}, textInputOpen, {\n            open: true,\n            title: 'Нова дошка',\n            message: '',\n            fieldLabel: 'Назва дошки',\n            value: '',\n        }));\n    }\n    //закрити створення та створити, якщо введені дані\n    function handleCloseDialogAddNewBoard(apply: boolean, value?: string) {\n        setTextInputOpen(Object.assign({}, textInputOpen, { open: false }));\n        if (apply && value) {\n            props.addBoard(value);\n        }\n    }\n    //змінює відображення\n    function handleChangeView(viewName: string, id: string) {\n        if (id === props.activeBoardId) {\n            props.history.push(`/${viewName}/${id}`);\n        }\n    }\n\n    function handleBoardsOpenClick() {\n        setBoardsOpen(!boardsOpen);\n    }\n    //поточний режим перегляду\n    let currentView = '';\n    if (props.history.location.pathname) {\n        if (props.history.location.pathname.startsWith('/kanban/')) {\n            currentView = 'kanban';\n        } else if (props.history.location.pathname.startsWith('/calendar/')) {\n            currentView = 'calendar';\n        } else if (props.history.location.pathname.startsWith('/edit/')) {\n            currentView = 'edit';\n        } else if (props.history.location.pathname.startsWith('/config/')) {\n            currentView = 'config';\n        }\n    }\n    //верстка бокового меню\n    return (\n        <>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                        [classes.drawerOpen]: open,\n                        [classes.drawerClose]: !open,\n                    }),\n                }}\n                anchor=\"left\"\n                open={open}\n                >\n                <div className={''}>\n                    <IconButton onClick={handleDrawerToggle}>\n                        {open ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                {open ?\n                    <>\n                        <List\n                            component=\"nav\"\n                            aria-labelledby=\"nested-list-subheader\"\n                            subheader={\n                                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                                    Дошки\n                                </ListSubheader>\n                            }>\n                            <ListItem button\n                                onClick={handleBoardsOpenClick}>\n                                {boardsOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                            </ListItem>\n                            <Collapse in={boardsOpen} timeout=\"auto\" unmountOnExit>\n                                <List component=\"div\" disablePadding>\n                                    {props.boards.map(x =>\n                                        <ListItem button\n                                                key={x._id}\n                                                selected={x._id === props.activeBoardId}\n                                                className={clsx(classes.nested)}\n                                                style={{fontWeight: x._id === props.activeBoardId ? 'bold' : 'normal'}}\n                                                onClick={ev => handleClickChangeActiveBoard(x._id)} >\n                                            <ListItemText\n                                                primary={x.name} />\n                                        </ListItem>\n                                    )}\n                                </List>\n                            </Collapse>\n                        </List>\n                        <ListItem button\n                            onClick={handleClickAddNewBoard}>\n                            <ListItemIcon><AddBoxIcon /></ListItemIcon>\n                            <ListItemText primary=\"Нова дошка..\" />\n                        </ListItem>\n                        <Divider />\n                    </> :\n                    <></>\n                }\n                <List>\n                    {/* налаштування */}\n                    <ListItem button\n                            selected={currentView === 'kanban' || currentView === ''}\n                            onClick={ev => handleChangeView('kanban', props.activeBoardId)}>\n                        <ListItemIcon><TableChartIcon /></ListItemIcon>\n                        {open ? <ListItemText primary=\"Робоча зона\" /> : <></>}\n                    </ListItem>\n                    <ListItem button\n                            selected={currentView === 'calendar'}\n                            onClick={ev => handleChangeView('calendar', props.activeBoardId)}>\n                        <ListItemIcon><CalendarTodayIcon /></ListItemIcon>\n                        {open ? <ListItemText primary=\"Календар\" /> : <></>}\n                    </ListItem>\n                    <ListItem button\n                            selected={currentView === 'edit'}\n                            onClick={ev => handleChangeView('edit', props.activeBoardId)}>\n                        <ListItemIcon><EditIcon /></ListItemIcon>\n                        {open ? <ListItemText primary=\"Редактор\" /> : <></>}\n                    </ListItem>\n                </List>\n                {open ?\n                    <>\n                        <Divider />\n                        <ListItem button\n                                selected={currentView === 'config'}\n                                onClick={ev => props.history.push(`/config/`)}>\n                            <ListItemIcon><SettingsIcon /></ListItemIcon>\n                            {open ? <ListItemText primary=\"Налаштування\" /> : <></>}\n                        </ListItem>\n                        \n                    </> :\n                    <></>\n                }\n            </Drawer>\n            {textInputOpen.open ?\n                <TextInputDialog\n                    open={true}\n                    title={textInputOpen.title}\n                    message={textInputOpen.message}\n                    fieldLabel={textInputOpen.fieldLabel}\n                    value={textInputOpen.value}\n                    validator={textInputOpen.validator}\n                    onClose={textInputOpen.onClose} /> :\n                <></>\n            }\n        </>\n    );\n}\nexport default (withRouter(connect(mapStateToProps, mapDispatchToProps)(AppDrawer) as any) as any) as React.FC;\n","//повернення дати\nexport function formatDate(d: Date) {\n    return `${String(d.getFullYear()).padStart(4, '0')}-${\n        String(d.getMonth() + 1).padStart(2, '0')}-${\n        String(d.getDate()).padStart(2, '0')}`;\n}\n//Пошук дати в тексті\nexport function parseISODate(s: string) {\n    const m = s.match(/^(?:(-?\\d{4,})-(\\d{2})-(\\d{2}))|(?:(-?\\d{4,})(\\d{2})(\\d{2}))$/);\n    if (m) {\n        return new Date(Number(m[1]), Number(m[2]) - 1, Number(m[3]));\n    } else {\n        return null;\n    }\n}\n","import React                  from 'react';\nimport Button                 from '@material-ui/core/Button';\nimport TextField              from '@material-ui/core/TextField';\nimport Dialog                 from '@material-ui/core/Dialog';\nimport DialogActions          from '@material-ui/core/DialogActions';\nimport DialogContent          from '@material-ui/core/DialogContent';\nimport DialogContentText      from '@material-ui/core/DialogContentText';\nimport DialogTitle            from '@material-ui/core/DialogTitle';\nimport CheckIcon              from '@material-ui/icons/Check';\nimport CancelIcon             from '@material-ui/icons/Cancel';\nimport { useTheme }           from '@material-ui/core/styles';\nimport gensym                 from '../lib/gensym';\nimport { ConfirmDialogProps } from '../types';\n\n\n // діалогое вікно\nconst ConfirmDialog: React.FC<ConfirmDialogProps> = (props) => {\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(props.open);\n    const [inputValue, setInputValue] = React.useState('');\n\n    const formDialogTitleId = gensym();\n    //кнопка відмінити\n    function handleCancelClick() {\n        setOpen(false);\n        props.onClose(false);\n    }\n    //кнопка підтвердити\n    function handleApplyClick() {\n        if (props.confirmingTextValue && props.confirmingTextValue !== inputValue) {\n            return;\n        }\n        setOpen(false);\n        props.onClose(true);\n    }\n        //зміна даних\n    function handleValueChange(event: React.ChangeEvent<HTMLInputElement>) {\n        setInputValue(event.target.value);\n    }\n    //вертска сторінки\n    return (\n        <Dialog open={open} onClose={handleCancelClick} aria-labelledby={formDialogTitleId}>\n            {props.fab ? props.fab : <></>}\n            <DialogTitle id={formDialogTitleId} style={{textAlign: 'center'}}>{props.title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText style={{textAlign: 'center'}}>\n                    {(props.message || '').split('\\n').map((x, index, arr) =>\n                        <span key={'content-' + index}>\n                            {x}\n                            {index <= (arr.length - 1) ? <br/> : <></>}\n                        </span>)\n                    }\n                </DialogContentText>\n            </DialogContent>\n            {props.confirmingTextValue ?\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    label={props.confirmingTextLabel}\n                    value={inputValue}\n                    onChange={handleValueChange}\n                    style={{marginLeft: theme.spacing(1), marginRight: theme.spacing(1), marginBottom: theme.spacing(1)}}\n                    /> :\n                    <></>\n            }\n            <DialogActions style={{margin: 'auto'}}>\n                {!props.singleButton?\n                    <Button\n                        variant=\"outlined\"\n                        color=\"default\"\n                        onClick={handleCancelClick} >\n                        <CancelIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.cancelButtonCaption || 'Відмінити'}\n                    </Button> :\n                    <></>\n                }\n                <Button\n                    variant=\"contained\"\n                    color={props.colorIsSecondary ? 'secondary' : 'primary'}\n                    disabled={props.confirmingTextValue ? inputValue !== props.confirmingTextValue : false}\n                    onClick={handleApplyClick} >\n                    <CheckIcon /><span style={{marginLeft: theme.spacing(1)}} />{props.applyButtonCaption || 'Підтвердити'}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nexport default ConfirmDialog;\n","import { parserInput }      from 'fruitsconfits/modules/lib/types';\nimport { getStringParsers } from 'fruitsconfits/modules/lib/string-parser';\n\n\n\ntype Ctx = undefined;\ntype Ast = string | string[];\n\n//фабрика парсерів рядків\nconst $s = getStringParsers<Ctx, Ast>({\n    rawToToken: rawToken => rawToken,\n    concatTokens: tokens => (tokens.length ?\n        [tokens.reduce((a, b) => a as string + b as string)] : []),\n});\n\nconst {seq, cls, notCls, classes, cat,\n        repeat, end, first, combine, erase, trans, ahead} = $s;\n\n//парсинг рядків через кому для підтримки формату CSV окремих елементыв\nconst quoted = trans(input => input.length ? input : [''])(\n    erase(repeat(classes.spaceWithinSingleLine), cls('\"')),\n    cat(repeat(first(\n        trans(input => ['\"'])(seq('\"\"')),\n        notCls('\"'),\n    ))),\n    erase(cls('\"'), repeat(erase(classes.spaceWithinSingleLine))),);\n\nconst nakid = trans(input => input.length ? input : [''])(\n    erase(repeat(classes.spaceWithinSingleLine)),\n    cat(repeat(first(\n        erase(classes.spaceWithinSingleLine, ahead(cls(',', '\\r\\n', '\\n', '\\r'))),\n        notCls(',', '\\r\\n', '\\n', '\\r'),\n    ))),);\n\nconst cell = first(quoted, nakid);\n\nconst row = trans(input => [input as string[]])(\n    cell,\n    repeat(combine(erase(seq(',')), cell)),);\n\nconst rows = combine(\n    row,\n    repeat(combine(erase(classes.newline), row)),\n    end(),);\n\n// функція повернення представлення тексту масивом масивів\nexport function parse(s: string) {\n    const z = rows(parserInput(s));\n    if (! z.succeeded) {\n        throw new Error(z.message);\n    }\n    return z.tokens as string[][];\n}\n","import React                      from 'react';\nimport                                 'date-fns';\nimport DateFnsUtils               from '@date-io/date-fns';\nimport { MaterialUiPickersDate }  from '@material-ui/pickers/typings/date';\nimport { MuiPickersUtilsProvider,\n         KeyboardDatePicker }     from '@material-ui/pickers';\nimport Button                     from '@material-ui/core/Button';\nimport TextField                  from '@material-ui/core/TextField';\nimport Select                     from '@material-ui/core/Select';\nimport MenuItem                   from '@material-ui/core/MenuItem';\nimport InputLabel                 from '@material-ui/core/InputLabel';\nimport FormControl                from '@material-ui/core/FormControl';\nimport Dialog                     from '@material-ui/core/Dialog';\nimport DialogActions              from '@material-ui/core/DialogActions';\nimport DialogContent              from '@material-ui/core/DialogContent';\nimport DialogTitle                from '@material-ui/core/DialogTitle';\nimport Typography                 from '@material-ui/core/Typography';\nimport Fab                        from '@material-ui/core/Fab';\nimport ArchiveIcon                from '@material-ui/icons/Archive';\nimport DeleteIcon                 from '@material-ui/icons/Delete';\nimport CheckIcon                  from '@material-ui/icons/Check';\nimport CancelIcon                 from '@material-ui/icons/Cancel';\nimport { makeStyles,\n         useTheme }               from '@material-ui/core/styles';\nimport clsx                       from 'clsx';\nimport gensym                     from '../lib/gensym';\nimport { KanbanDialogProps }      from '../types';\nimport { formatDate,\n         parseISODate }           from '../lib/datetime';\nimport ConfirmDialog              from '../components/ConfirmDialog';\nimport { parse as parseCsv }      from '../lib/csv';\n\n\n//стилі дошки\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        minWidth: 220,\n    },\n    icon: {\n        margin: theme.spacing(1),\n        fontSize: 26,\n    },\n    fabDelete: {\n        position: 'absolute',\n        margin: theme.spacing(1),\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n    },\n}));\n\n//змінні для роботи з картками на дошці\nconst KanbanDialog: React.FC<KanbanDialogProps> = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [open, setOpen] = React.useState(props.open);\n    const [confirmOpen, setConfirmOpen] = React.useState(false);\n    const [description, setDescription] = React.useState(props.record.description);\n    const [barcode, setBarcode] = React.useState(props.record.barcode);\n    const [memo, setMemo] = React.useState(props.record.memo);\n    const [tags, setTags] = React.useState(props.record.tags ?\n        props.record.tags.map(x => x.includes(',') ? `\"${x.replace(/\"/g, '\"\"')}\"` : x).join(', ') : '');\n    const [flags, setFlags] = React.useState(props.record.flags ?\n        props.record.flags.map(x => x.includes(',') ? `\"${x.replace(/\"/g, '\"\"')}\"` : x).join(', ') : '');\n    const [dueDate, setDueDate] = React.useState<MaterialUiPickersDate>(parseISODate(props.record.dueDate));\n    const [taskStatus, setTaskStatus] = React.useState(props.record.taskStatus);\n    const [teamOrStory, setTeamOrStory] = React.useState(props.record.teamOrStory);\n\n    const formDialogTitleId = gensym();\n    const taskStatusesId = gensym();\n    const teamOrStoryId = gensym();\n        //кнопка відміни\n    function handleCancelClick() {\n        setOpen(false);\n        props.onCancel();\n    }\n    //кнопка підтвердження\n    function handleApplyClick() {\n        setOpen(false);\n\n        const tagsTrimmed = tags.trim();\n        const tagsParsed = tagsTrimmed ? parseCsv(tagsTrimmed) : [];\n\n        const flagsTrimmed = flags.trim();\n        const flagsParsed = flagsTrimmed ? parseCsv(flagsTrimmed) : [];\n\n        props.onApply(Object.assign({}, props.record, {\n            description,\n            barcode,\n            memo,\n            tags: (tagsParsed[0] || []).map(x => x.trim()).filter(x => x.length > 0),\n            flags: (flagsParsed[0] || []).map(x => x.trim()).filter(x => x.length > 0),\n            dueDate: (dueDate && !Number.isNaN(dueDate.getTime())) ? formatDate(dueDate) : '',\n            taskStatus,\n            teamOrStory,\n        }));\n    }\n    //архівувати/видалити\n    function handleArchiveOrDeleteClick() {\n        setConfirmOpen(true);\n    }\n    //зміна опису\n    function handleDescriptionChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        setDescription(event.target.value);\n    }\n    //зміна дати\n    function handleDueDateChange(date: MaterialUiPickersDate) {\n        setDueDate(date);\n    }\n    //зміна статусу\n    function handleTaskStatusChange(event: React.ChangeEvent<{name?: string, value: unknown}>) {\n        if (! event.target.name) {\n            return;\n        }\n        setTaskStatus(event.target.value as string);\n    }\n    //зміна команди\n    function handleTeamOrStoryChange(event: React.ChangeEvent<{name?: string, value: unknown}>) {\n        if (! event.target.name) {\n            return;\n        }\n        setTeamOrStory(event.target.value as string);\n    }\n    //зміна тегів\n    function handleTagsChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        setTags(event.target.value);\n    }\n    //зміна міток\n    function handleFlagsChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        setFlags(event.target.value);\n    }\n\n    function handleBarcodeChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        setBarcode(event.target.value);\n    }\n    //зміна нотаток\n    function handleMemoChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        setMemo(event.target.value);\n    }\n    //архівування\n    function handleConfirmArchiving(apply: boolean) {\n        setConfirmOpen(false);\n        if (apply) {\n            setOpen(false);\n            props.onArchive(props.record._id);\n        }\n    }\n    //видалення\n    function handleConfirmDeleting(apply: boolean) {\n        setConfirmOpen(false);\n        if (apply) {\n            setOpen(false);\n            props.onDelete(props.record._id);\n        }\n    }\n    //верстка сторінки\n    return (\n        <>\n            <Dialog open={open} onClose={handleCancelClick} aria-labelledby={formDialogTitleId}>\n                <DialogTitle id={formDialogTitleId} style={{paddingBottom: '0'}}>\n                    Змінити завдання\n                    <Button\n                        className={clsx(classes.fabDelete)}\n                        variant=\"outlined\"\n                        color=\"default\"\n                        onClick={handleArchiveOrDeleteClick} >\n                        {props.board.preferArchive ? <ArchiveIcon /> : <DeleteIcon color=\"secondary\" />}\n                        <Typography variant=\"body1\" color={props.board.preferArchive ? 'initial' : 'secondary'}\n                            style={{marginLeft: theme.spacing(1)}} >\n                            {props.board.preferArchive ? 'Архівувати' : 'Видалити'}\n                        </Typography>\n                    </Button>\n                </DialogTitle>\n                <DialogContent>\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <div>\n                            <TextField\n                                margin=\"dense\"\n                                label=\"Опис\"\n                                multiline\n                                rows={4}\n                                rowsMax={16}\n                                fullWidth\n                                value={description}\n                                onChange={handleDescriptionChange}\n                                helperText=\"Mожна використовувати Markdown\"\n                                />\n                        </div>\n                        <div>\n                            <KeyboardDatePicker\n                                margin=\"dense\"\n                                label=\"Кінцева дата\"\n                                format=\"yyyy-MM-dd\"\n                                KeyboardButtonProps={{\n                                    'aria-label': 'change date',\n                                }}\n                                value={dueDate}\n                                onChange={handleDueDateChange}\n                                />\n                        </div>\n                        <div>\n                            <FormControl className={clsx(classes.formControl)} style={{marginTop: '5px'}}>\n                                <InputLabel htmlFor={taskStatusesId}>Статус</InputLabel>\n                                <Select\n                                    value={taskStatus}\n                                    onChange={handleTaskStatusChange}\n                                    inputProps={{\n                                        name: 'taskStatus',\n                                        id: taskStatusesId,\n                                    }}\n                                    >\n                                    {props.taskStatuses.map(x => (\n                                        <MenuItem key={x.value} value={x.value}>{x.caption || x.value}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                            <FormControl className={clsx(classes.formControl)} style={{marginLeft: theme.spacing(1), marginTop: '5px'}}>\n                                <InputLabel htmlFor={teamOrStoryId}>Команда / Категорія</InputLabel>\n                                <Select\n                                    value={teamOrStory}\n                                    onChange={handleTeamOrStoryChange}\n                                    inputProps={{\n                                        name: 'teamOrStory',\n                                        id: teamOrStoryId,\n                                    }}\n                                    >\n                                    {props.teamOrStories.map(x => (\n                                        <MenuItem key={x.value} value={x.value}>{x.caption || x.value}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </div>\n                        {props.board.displayTags && props.board.displayFlags ?\n                            <div>\n                                <FormControl className={clsx(classes.formControl)} style={{marginTop: '5px'}}>\n                                    <TextField\n                                        margin=\"dense\"\n                                        label=\"Позначки\"\n                                        value={tags}\n                                        onChange={handleTagsChange}\n                                        helperText=\"Розділяти комами (CSV синтакс)\"\n                                        />\n                                </FormControl>\n                                <FormControl className={clsx(classes.formControl)} style={{marginLeft: theme.spacing(1), marginTop: '5px'}}>\n                                    <TextField\n                                        margin=\"dense\"\n                                        label=\"Мітки\"\n                                        value={flags}\n                                        onChange={handleFlagsChange}\n                                        helperText=\"Розділяти комами (CSV синтакс)\"\n                                        />\n                                </FormControl>\n                            </div> :\n                            <></>\n                        }\n                        {props.board.displayTags && !props.board.displayFlags ?\n                            <div>\n                                <TextField\n                                    margin=\"dense\"\n                                    label=\"Мітки\"\n                                    fullWidth\n                                    value={tags}\n                                    onChange={handleTagsChange}\n                                    helperText=\"Розділяти комами (CSV синтакс)\"\n                                    />\n                            </div> :\n                            <></>\n                        }\n                        {props.board.displayFlags && !props.board.displayTags ?\n                            <div>\n                                <TextField\n                                    margin=\"dense\"\n                                    label=\"Мітки\"\n                                    fullWidth\n                                    value={flags}\n                                    onChange={handleFlagsChange}\n                                    helperText=\"Розділяти комами (CSV синтакс)\"\n                                    />\n                            </div> :\n                            <></>\n                        }\n                        {props.board.displayBarcode ?\n                            <div>\n                                <TextField\n                                    margin=\"dense\"\n                                    label=\"QR-код\"\n                                    multiline\n                                    rows={1}\n                                    rowsMax={16}\n                                    fullWidth\n                                    value={barcode}\n                                    onChange={handleBarcodeChange}\n                                    />\n                            </div> :\n                            <></>\n                        }\n                        {props.board.displayMemo ?\n                            <div>\n                                <TextField\n                                    margin=\"dense\"\n                                    label=\"Нотатки\"\n                                    multiline\n                                    rows={1}\n                                    rowsMax={16}\n                                    fullWidth\n                                    value={memo}\n                                    onChange={handleMemoChange}\n                                    />\n                            </div> :\n                            <></>\n                        }\n                    </MuiPickersUtilsProvider>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCancelClick} variant=\"outlined\" color=\"default\">\n                        <CancelIcon /><span style={{marginLeft: theme.spacing(1)}} />Відмінити\n                    </Button>\n                    <Button onClick={handleApplyClick} variant=\"contained\" color=\"primary\">\n                        <CheckIcon /><span style={{marginLeft: theme.spacing(1)}} />Підтвердити\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            {confirmOpen ?\n                <ConfirmDialog\n                    open={true}\n                    title={props.board.preferArchive ? 'Архівувати' : 'Видалити'}\n                    message={`Ви впевнені, що хочете ${props.board.preferArchive ? 'архівувати' : 'видалити'} завдання?`}\n                    colorIsSecondary={props.board.preferArchive ? false : true}\n                    applyButtonCaption={props.board.preferArchive ? 'Архівувати' : 'Видалити'}\n                    fab={props.board.preferArchive ?\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"archive\" style={{margin: 'auto'}}>\n                            <ArchiveIcon />\n                        </Fab> :\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"delete\" color=\"secondary\" style={{margin: 'auto'}}>\n                            <DeleteIcon />\n                        </Fab>\n                    }\n                    onClose={props.board.preferArchive ?\n                        handleConfirmArchiving:\n                        handleConfirmDeleting} /> :\n                <></>\n            }\n        </>\n    );\n}\nexport default KanbanDialog;\n","export const boardStyle =\n`/* per-board customized styles */\n/*\n.KanbanBoardView-sticky-note {width: 200px}\n.KanbanBoardView-header-cell-task-statuses {min-width: 210px}\ntable.KanbanBoardView-board tbody th {\n    padding: 10px;\n    white-space: nowrap;\n}\n*/\ntable.KanbanBoardView-board thead th.status-backlog {\n    background-color: var(--weak-header-bg-color);\n}\ntable.KanbanBoardView-board td.status-backlog {\n    background-color: var(--weak-data-bg-color);\n}\ntable.KanbanBoardView-board thead th.status-done {\n    background-color: var(--weak-header-bg-color);\n}\ntable.KanbanBoardView-board td.status-done {\n    background-color: var(--weak-data-bg-color);\n}\n.team-or-story-team-b .KanbanBoardView-sticky-note {\n    background-color: var(--sticky-blue-color);\n}\n.status-done .KanbanBoardView-sticky-note {\n    background-color: var(--sticky-green-color);\n}\n.KanbanBoardView-sticky-tags .tag-bug {\n    color: white;\n    background-color: red;\n}\n`;\n\n\nexport const calendarStyle =\n`/* per-board customized styles */\ndiv.CalendarView-item-chip.status-done {\n    background-color: var(--sticky-green-color);\n}\n`;\n\n\nexport const initialData = {\n    \"boards\": [{\n        \"type\": \"kanbanBoard\",\n        \"name\": \"Welcome Board\",\n        \"taskStatuses\": [{\n            \"value\": \"Backlog\",\n            \"caption\": \"Backlog\",\n            \"className\": \"status-backlog\"\n        }, {\n            \"value\": \"ToDo\",\n            \"caption\": \"To do\",\n            \"className\": \"status-todo\"\n        }, {\n            \"value\": \"InProgress\",\n            \"caption\": \"In Progress\",\n            \"className\": \"status-inprogress\"\n        }, {\n            \"value\": \"Staging\",\n            \"caption\": \"Staging\",\n            \"className\": \"status-staging\"\n        }, {\n            \"value\": \"Done\",\n            \"caption\": \"Done\",\n            \"className\": \"status-done\",\n            \"completed\": true\n        }],\n        \"teamOrStories\": [{\n            \"value\": \"Team A\",\n            \"caption\": \"Команда A\",\n            \"className\": \"team-or-story-team-a\"\n        }, {\n            \"value\": \"Team B\",\n            \"caption\": \"Команда Б\",\n            \"className\": \"team-or-story-team-b\"\n        }, {\n            \"value\": \"Team C\",\n            \"caption\": \"Команда В\",\n            \"className\": \"team-or-story-team-c\"\n        }],\n        \"tags\": [{\n            \"value\": \"bug\",\n            \"className\": \"tag-bug\"\n        }],\n        \"displayBarcode\": true,\n        \"displayMemo\": true,\n        \"displayFlags\": true,\n        \"displayTags\": true,\n        \"preferArchive\": false,\n        \"boardStyle\": boardStyle,\n        \"calendarStyle\": calendarStyle\n    }],\n    \"records\": [{\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"# Welcome to the Kanban Board App!\\n\" +\n            \"* This is a kanban (or sticky).\\n\" +\n            \"* Write one task for one kanban.\\n\" +\n            \"* To add a kanban to the board, click the “+” icon in the upper left corner of the board.\\n\" +\n            \"* Tap or click on kanban to edit.\\n\" +\n            \"* Drag and drop the kanban to change the status.\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team B\",\n        \"taskStatus\": \"Backlog\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"* Board and Kanban data are stored in the browser's local “indexed DB”.\\n\" +\n            \"* You can use a remote [“CouchDB”](https://couchdb.apache.org) server to synchronize multiple device boards.\\n\" +\n            \"* You can get a fully managed CouchDB server with [“IBM Cloudant®” from IBM Cloud](https://www.ibm.com/cloud/cloudant).\\n\" +\n            \"* Create an [IBM Cloud Lite account](https://www.ibm.com/cloud/free/) and get a free tier without a credit card.\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team B\",\n        \"taskStatus\": \"ToDo\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"# Go [Settings](#/config/) to setup\\n\\n\" +\n            \"----\\n\\n\" +\n            \"* `remote.endpointUrl`: Cloudant `External Endpoint` URL w/ DB name\\n\" +\n            \"  * e.g. `https://???-bluemix.cloudant.com/mydb`\\n\" +\n            \"* `remote.user`: Cloudant `API Key`\\n\" +\n            \"* `remote.password`: Cloudant `API Key`'s password\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team B\",\n        \"taskStatus\": \"ToDo\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"* You can customize the appearance and behavior of the board and kanban in the configuration editor view.\\n\\n\\n\" +\n            \"----\\n\\n\" +\n            \"# Go [Editor](#/edit/) to setup\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team B\",\n        \"taskStatus\": \"InProgress\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"2030-01-01\",\n        \"description\":\n            \"### Hello, kanban board !\\n\\n\" +\n            \"* ~aaa~\\n\" +\n            \"  * **bbb**\\n\" +\n            \"* *ccc*\\n\\n\" +\n            \"----\\n\\n\" +\n            \"https://shellyln.github.io/\\n\\n\" +\n            \"![logo](https://shellyln.github.io/assets/image/shellyln.png)\",\n        \"barcode\": \"12345\",\n        \"memo\": \"memo\",\n        \"flags\": [\"Marked\"],\n        \"tags\": [\"PR\", \"bug\"],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team B\",\n        \"taskStatus\": \"Staging\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"# What is a Kanban Board?\\n\" +\n            \"https://www.atlassian.com/agile/kanban/boards\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team C\",\n        \"taskStatus\": \"Backlog\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"# What are WIP limits?\\n\" +\n            \"https://www.atlassian.com/agile/kanban/wip-limits\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team C\",\n        \"taskStatus\": \"Backlog\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"# Get Started With Cloudant in IBM Cloud\\n\" +\n            \"https://developer.ibm.com/clouddataservices/docs/cloudant/get-started/\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team C\",\n        \"taskStatus\": \"ToDo\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"# Sign up for IBM Cloud\\n\" +\n            \"https://cloud.ibm.com/registration\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team C\",\n        \"taskStatus\": \"ToDo\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"\",\n        \"description\":\n            \"Release Kanban board app v0.0.1\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team A\",\n        \"taskStatus\": \"Done\"\n    }, {\n        \"type\": \"kanban\",\n        \"dueDate\": \"2030-01-01\",\n        \"description\": \"This record is archived.\",\n        \"barcode\": \"\",\n        \"memo\": \"\",\n        \"flags\": [\"Archived\"],\n        \"tags\": [],\n        \"boardId\": \"\",\n        \"teamOrStory\": \"Team B\",\n        \"taskStatus\": \"Backlog\"\n    }]\n}\n","import { reducerWithInitialState,\n         ReducerBuilder }         from 'typescript-fsa-reducers';\nimport { push }                   from 'connected-react-router';\nimport { KanbanBoardState,\n         KanbanBoardInitialData,\n         DocumentWithContents,\n         KanbanBoardDbRecord,\n         KanbanBoardDbRecordUserData,\n         KanbanBoardRecord,\n         KanbanRecord }           from '../types';\nimport { appEventsActions }       from '../actions/AppEventsActions';\nimport { kanbanBoardActions }     from '../actions/KanbanBoardActions';\nimport { restartSync,\n         getLocalDb }             from '../lib/db';\nimport { formatDate }             from '../lib/datetime';\nimport { getConstructedAppStore } from '../store';\nimport { initialData }            from '../data/initial-data';\n\n\n\nlet kanbanBoardReducer: ReducerBuilder<KanbanBoardState, KanbanBoardState> = null as any;\n\nexport async function getKanbanBoardReducer() {\n    if (!kanbanBoardReducer) {\n        const db = getLocalDb();\n\n        \n        let resp: PouchDB.Core.AllDocsResponse<DocumentWithContents> = null as any;\n\n        resp = await db.allDocs({\n            include_docs: true,\n        });\n\n        if (resp.rows.length === 0) {\n            const data: KanbanBoardInitialData = initialData as any;\n\n            const postRespBoards = await db.bulkDocs([\n                ...data.boards,\n            ], {});\n\n            const now = new Date();\n            for (const rec of data.records) {\n                rec.dueDate = formatDate(now);\n                rec.boardId = postRespBoards[0].id as string;\n            }\n            await db.bulkDocs([\n                ...data.records,\n            ], {});\n\n            resp = await db.allDocs({\n                include_docs: true,\n            });\n        }\n\n        const boards: KanbanBoardRecord[] = resp.rows\n            .filter(x => x.doc && x.doc.type === 'kanbanBoard')\n            .map(x => x.doc)\n            .sort((a: any, b: any) =>\n                String(a.name).toLocaleLowerCase() >= String(b.name).toLocaleLowerCase() ?\n                (String(a.name) === String(b.name) ? 0 : 1) : -1) as any;\n        for (const board of boards) {\n            const records: KanbanRecord[] = resp.rows\n                .filter(x => x.doc && x.doc.type === 'kanban' &&\n                    (x.doc as KanbanRecord).boardId === board._id)\n                .map(x => x.doc) as any;\n            board.records = records;\n        }\n\n        const initialState: KanbanBoardState = {\n            activeBoard: boards[0],\n            boards: boards,\n            activeBoardId: boards[0]._id,\n            activeBoardIndex: 0,\n        };\n\n        kanbanBoardReducer = reducerWithInitialState(initialState)\n            //Додати дошку асинхронно\n            .case(kanbanBoardActions.startAddBoard, (state, payload) => {\n                const data: KanbanBoardInitialData = initialData as any;\n                const board: KanbanBoardDbRecordUserData = {\n                    type: 'kanbanBoard',\n                    name: payload.boardName,\n                    taskStatuses: data.boards[0].taskStatuses,\n                    teamOrStories: data.boards[0].teamOrStories,\n                    tags: data.boards[0].tags,\n                    displayBarcode: data.boards[0].displayBarcode,\n                    displayMemo: data.boards[0].displayMemo,\n                    displayFlags: data.boards[0].displayFlags,\n                    displayTags: data.boards[0].displayTags,\n                    preferArchive: data.boards[0].preferArchive,\n                    boardStyle: data.boards[0].boardStyle,\n                    calendarStyle: data.boards[0].calendarStyle,\n                };\n                db.post(board, {})\n                .then(v => {\n                    const saved: KanbanBoardRecord = board as any;\n                    saved._id = v.id;\n                    saved._rev = v.rev;\n                    saved.records = [];\n                    state.boards = state.boards.concat([saved]);\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneAddBoard({\n                        params: payload,\n                        result: Object.assign({}, state, { activeBoardId: v.id, activeBoard: saved }),\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(push(`/kanban/${v.id}`));\n                    }, 30);\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedAddBoard({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Неможливо додати дошку: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n                return state;\n            })\n            .case(kanbanBoardActions.doneAddBoard, (state, arg) => {\n                setTimeout(() => {\n                    restartSync()\n                    .then(() => {\n                        //\n                    }).catch(err => {\n                        alert(err.message);\n                    })\n                }, 1500);\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedAddBoard, (state, arg) => {\n                return state;\n            })\n\n            //Змінити активну дошку асинхронно\n            .case(kanbanBoardActions.startChangeActiveBoard, (state, payload) => {\n                (async () => {\n                    try {\n                        const board = await db.get<KanbanBoardRecord>(payload.boardId, {});\n                        if (! board) {\n                            return state;\n                        }\n                        const records: KanbanRecord[] = (await db.find({selector: {\n                            type: 'kanban',\n                            boardId: board._id,\n                        }})).docs as any;\n\n                        board.records = records;\n                        const index = state.boards.findIndex(x => x._id === board._id);\n                        const boards = state.boards.slice(0, index).concat(\n                            [board],\n                            state.boards.slice(index + 1),\n                        );\n\n                        getConstructedAppStore().dispatch(kanbanBoardActions.doneChangeActiveBoard({\n                            params: payload,\n                            result: Object.assign({}, state, {\n                                boards,\n                                activeBoardId: board._id,\n                                activeBoard: board,\n                            }),\n                        }));\n                    } catch (e) {\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedChangeActiveBoard({\n                            params: payload,\n                            error: e,\n                        }));\n                        setTimeout(() => {\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                open: true,\n                                title: 'Error',\n                                message: 'Помилка зміни дошки: ' + e.message,\n                                singleButton: true,\n                                colorIsSecondary: true,\n                                onClose: () => {\n                                    getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog());\n                                    setTimeout(() => {\n                                        getConstructedAppStore().dispatch(push(`/kanban/`));\n                                    }, 500);\n                                },\n                            }));\n                        }, 30);\n                    }\n                })();\n                return state;\n            })\n            .case(kanbanBoardActions.doneChangeActiveBoard, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedChangeActiveBoard, (state, arg) => {\n                return state;\n            })\n\n            //Змінити назву дддошки асинхронно\n            .case(kanbanBoardActions.startUpdateBoardName, (state, payload) => {\n                (async () => {\n                    try {\n                        const dbBoard = await db.get<KanbanBoardRecord>(payload.boardId);\n                        if (! dbBoard) {\n                            return state;\n                        }\n                        const records: KanbanRecord[] = (await db.find({selector: {\n                            type: 'kanban',\n                            boardId: dbBoard._id,\n                        }})).docs as any;\n\n                        const change = Object.assign({}, dbBoard, { name: payload.boardName });\n                        const saved = await db.put(change, {});\n\n                        change.records = records;\n                        change._id = saved.id;\n                        change._rev = saved.rev;\n\n                        const index = state.boards.findIndex(x => x._id === payload.boardId);\n                        const board = Object.assign({}, state.boards[index] || {}, change);\n\n                        const boards = index >= 0 ?\n                            state.boards.slice(0, index).concat(\n                                [board],\n                                state.boards.slice(index + 1),\n                            ) : state.boards;\n\n                            getConstructedAppStore().dispatch(kanbanBoardActions.doneUpdateBoardName({\n                            params: payload,\n                            result: Object.assign({}, state, {\n                                boards,\n                                activeBoardId: board._id,\n                                activeBoard: board,\n                            }),\n                        }));\n                    } catch (e) {\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedUpdateBoardName({\n                            params: payload,\n                            error: e,\n                        }));\n                        setTimeout(() => {\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                open: true,\n                                title: 'Error',\n                                message: 'Помилка призмінні назви дошки: ' + e.message,\n                                singleButton: true,\n                                colorIsSecondary: true,\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                            }));\n                        }, 30);\n                    }\n                })();\n                return state;\n            })\n            .case(kanbanBoardActions.doneUpdateBoardName, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedUpdateBoardName, (state, arg) => {\n                return state;\n            })\n\n            //Видалити дошку асинхронно\n            .case(kanbanBoardActions.startDeleteBoard, (state, payload) => {\n                (async () => {\n                    try {\n                        if (state.boards.length <= 1) {\n                            return state;\n                        }\n                        const dbBoard = await db.get<KanbanBoardDbRecord>(payload.boardId);\n                        if (! dbBoard) {\n                            return state;\n                        }\n\n                        const records: KanbanRecord[] = (await db.find({selector: {\n                            type: 'kanban',\n                            boardId: payload.boardId,\n                        }})).docs as any;\n\n                        for (const record of records) {\n                            await db.remove(record, {});\n                        }\n\n                        await db.remove(dbBoard, {});\n\n                        const index = state.boards.findIndex(x => x._id === payload.boardId);\n                        const boards = index >= 0 ?\n                            state.boards.slice(0, index).concat(\n                                state.boards.slice(index + 1),\n                            ) : state.boards;\n                        let activeBoard = state.activeBoard;\n                        let activeBoardId = state.activeBoardId;\n                        if (activeBoardId === payload.boardId) {\n                            activeBoard = boards[0];\n                            activeBoardId = boards[0]._id;\n                        }\n\n                        setTimeout(() => {\n                            getConstructedAppStore().dispatch(kanbanBoardActions.doneDeleteBoard({\n                                params: payload,\n                                result: Object.assign({}, state, {\n                                    boards,\n                                    activeBoardId,\n                                    activeBoard,\n                                }),\n                            }));\n                            setTimeout(() => {\n                                getConstructedAppStore().dispatch(push(`/kanban/${activeBoardId}`));\n                                setTimeout(() => {\n                                    getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                        open: true,\n                                        title: 'Done',\n                                        message: 'Успішно видалено',\n                                        singleButton: true,\n                                        onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                                    }));\n                                }, 30);\n                            }, 30);\n                        }, 30);\n                    } catch (e) {\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedDeleteBoard({\n                            params: payload,\n                            error: e,\n                        }));\n                        setTimeout(() => {\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                open: true,\n                                title: 'Error',\n                                message: 'Помилка при видаленні дошки: ' + e.message,\n                                singleButton: true,\n                                colorIsSecondary: true,\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                            }));\n                        }, 30);\n                    }\n                })();\n                return state;\n            })\n            .case(kanbanBoardActions.doneDeleteBoard, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedDeleteBoard, (state, arg) => {\n                return state;\n            })\n\n            // Додати картку асинхронно\n            .case(kanbanBoardActions.startAddStikey, (state, payload) => {\n                const now = new Date();\n                const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\n                const change: KanbanRecord = {\n                    type: 'kanban',\n                    dueDate: formatDate(today),\n                    description: '# Без назви',\n                    barcode: '',\n                    memo: '',\n                    flags: [],\n                    tags: [],\n                    boardId: state.activeBoardId,\n                    taskStatus: state.activeBoard.taskStatuses[0].value,\n                    teamOrStory: state.activeBoard.teamOrStories[0].value,\n                } as any;\n\n                const records = state.activeBoard.records.concat([change]);\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\n\n                db.post(change, {})\n                .then(v => {\n                    change._id = v.id;\n                    change._rev = v.rev;\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneAddStikey({\n                        params: payload,\n                        result: Object.assign({}, state, { activeBoard }),\n                    }));\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedAddStikey({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Неможливо додати завдання: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n\n                return state;\n            })\n            .case(kanbanBoardActions.doneAddStikey, (state, arg) => {\n                setTimeout(() => {\n                    restartSync()\n                    .then(() => {\n                        //\n                    }).catch(err => {\n                        alert(err.message);\n                    })\n                }, 1500);\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedAddStikey, (state, arg) => {\n                return state;\n            })\n\n            //Оновлення картки асинхронно\n            .case(kanbanBoardActions.startUpdateStikey, (state, payload) => {\n                const index = state.activeBoard.records.findIndex(x => x._id === payload._id);\n                if (index < 0) {\n                    return state;\n                }\n\n                const change = Object.assign({}, state.activeBoard.records[index], {\n                    dueDate: payload.dueDate,\n                    description: payload.description,\n                    barcode: payload.barcode,\n                    memo: payload.memo,\n                    tags: payload.tags,\n                    flags: payload.flags,\n                    taskStatus: payload.taskStatus,\n                    teamOrStory: payload.teamOrStory,\n                });\n\n                const records = state.activeBoard.records.slice(0, index).concat(\n                    [change],\n                    state.activeBoard.records.slice(index + 1),\n                );\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\n\n                db.put(change, {})\n                .then(v => {\n                    change._id = v.id;\n                    change._rev = v.rev;\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneUpdateStikey({\n                        params: payload,\n                        result: Object.assign({}, state, { activeBoard }),\n                    }));\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedUpdateStikey({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Помилка при збереженні : ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n\n                return state;\n            })\n            .case(kanbanBoardActions.doneUpdateStikey, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedUpdateStikey, (state, arg) => {\n                return state;\n            })\n\n            //Оновлення таблиці асинхронно\n            .case(kanbanBoardActions.startUpdateStikeyLanes, (state, payload) => {\n                const index = state.activeBoard.records.findIndex(x => x._id === payload.kanbanId);\n                if (index < 0) {\n                    return state;\n                }\n\n                const change = Object.assign({}, state.activeBoard.records[index], {\n                    taskStatus: payload.taskStatusValue,\n                    teamOrStory: payload.teamOrStoryValue,\n                });\n\n                const records = state.activeBoard.records.slice(0, index).concat(\n                    [change],\n                    state.activeBoard.records.slice(index + 1),\n                );\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\n\n                db.put(change, {})\n                .then(v => {\n                    change._id = v.id;\n                    change._rev = v.rev;\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneUpdateStikeyLanes({\n                        params: payload,\n                        result: Object.assign({}, state, { activeBoard }),\n                    }));\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedUpdateStikeyLanes({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Помилка при збереженні: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n\n                return state;\n            })\n            .case(kanbanBoardActions.doneUpdateStikeyLanes, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedUpdateStikeyLanes, (state, arg) => {\n                return state;\n            })\n\n            //Архівування асинхронно\n            .case(kanbanBoardActions.startArchiveStikey, (state, payload) => {\n                const index = state.activeBoard.records.findIndex(x => x._id === payload.kanbanId);\n                if (index < 0) {\n                    return state;\n                }\n\n                const change = Object.assign({}, state.activeBoard.records[index]);\n                change.flags = (change.flags || []).filter(x => x !== 'Archived');\n                change.flags.push('Archived');\n\n                const records = state.activeBoard.records.slice(0, index).concat(\n                    [change],\n                    state.activeBoard.records.slice(index + 1),\n                );\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\n\n                db.put(change, {})\n                .then(v => {\n                    change._id = v.id;\n                    change._rev = v.rev;\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneArchiveStikey({\n                        params: payload,\n                        result: Object.assign({}, state, { activeBoard }),\n                    }));\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedArchiveStikey({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Помилка при архівуванні: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n\n                return state;\n            })\n            .case(kanbanBoardActions.doneArchiveStikey, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedArchiveStikey, (state, arg) => {\n                return state;\n            })\n\n            //Видалення таски асинхронно\n            .case(kanbanBoardActions.startDeleteStikey, (state, payload) => {\n                const index = state.activeBoard.records.findIndex(x => x._id === payload.kanbanId);\n                if (index < 0) {\n                    return state;\n                }\n\n                const change = state.activeBoard.records[index];\n\n                const records = state.activeBoard.records.slice(0, index).concat(\n                    state.activeBoard.records.slice(index + 1),\n                );\n                const activeBoard = Object.assign({}, state.activeBoard, { records });\n\n                db.remove(change, {})\n                .then(v => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.doneDeleteStikey({\n                        params: payload,\n                        result: Object.assign({}, state, { activeBoard }),\n                    }));\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(kanbanBoardActions.failedDeleteStikey({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Помилка при видаленні: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n\n                return state;\n            })\n            .case(kanbanBoardActions.doneDeleteStikey, (state, arg) => {\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedDeleteStikey, (state, arg) => {\n                return state;\n            })\n\n            //Зміна дошки асинхронно\n            .case(kanbanBoardActions.startEditBoardAndStikeys, (state, payload) => {\n                (async () => {\n                    try {\n                        const index = state.boards.findIndex(x => x._id === payload._id);\n                        if (index < 0) {\n                            return state;\n                        }\n\n                        const change = Object.assign({}, state.boards[index], {\n                            name: payload.name || 'Untitled',\n                            taskStatuses: payload.taskStatuses || initialState.activeBoard.taskStatuses,\n                            teamOrStories: payload.teamOrStories || initialState.activeBoard.teamOrStories,\n                            tags: payload.tags || initialState.activeBoard.tags,\n                            displayBarcode: !!payload.displayBarcode,\n                            displayMemo: !!payload.displayMemo,\n                            displayFlags: !!payload.displayFlags,\n                            displayTags: !!payload.displayTags,\n                            preferArchive: !!payload.preferArchive,\n                            boardStyle: payload.boardStyle || initialState.activeBoard.boardStyle,\n                            calendarStyle: payload.calendarStyle || initialState.activeBoard.calendarStyle,\n                        });\n\n                        const v = await db.put(change, {});\n                        change._id = v.id;\n                        change._rev = v.rev;\n\n                        const boards = state.boards.slice(0, index).concat(\n                            [change],\n                            state.boards.slice(index + 1),\n                        );\n                        let activeBoard = change._id === state.activeBoard._id ? change : state.activeBoard;\n\n                        // TODO: stikey records\n                        const records: KanbanRecord[] = (await db.find({selector: {\n                            type: 'kanban',\n                            boardId: change._id,\n                        }})).docs as any;\n\n                        const recordsNew: KanbanRecord[] = [];\n                        for (const rec of payload.records || []) {\n                            const recDb = records.find(x => x._id === rec._id);\n                            let recNew: KanbanRecord = null as any;\n                            if (recDb) {\n                                recNew = Object.assign({}, rec, { type: 'kanban', boardId: change._id, _rev: recDb._rev });\n                                const resp = await db.put(recNew, {});\n                                recNew._id = resp.id;\n                                recNew._rev = resp.rev;\n                            } else {\n                                recNew = Object.assign({}, rec, { type: 'kanban', boardId: change._id });\n                                delete recNew._id;\n                                delete recNew._rev;\n                                const resp = await db.post(recNew, {});\n                                recNew._id = resp.id;\n                                recNew._rev = resp.rev;\n                            }\n                            recordsNew.push(recNew);\n                        }\n                        for (const recDb of records) {\n                            const recNew = recordsNew.find(x => x._id === recDb._id);\n                            if (! recNew) {\n                                await db.remove(recDb, {});\n                            }\n                        }\n                        change.records = recordsNew;\n\n                        getConstructedAppStore().dispatch(kanbanBoardActions.doneEditBoardAndStikeys({\n                            params: payload,\n                            result: Object.assign({}, state, {\n                                boards,\n                                activeBoardId: activeBoard._id,\n                                activeBoard: activeBoard,\n                            }),\n                        }));\n                        setTimeout(() => {\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                open: true,\n                                title: 'Done',\n                                message: 'Успішно збережено',\n                                singleButton: true,\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                            }));\n                        }, 30);\n                    } catch (e) {\n                        getConstructedAppStore().dispatch(kanbanBoardActions.failedEditBoardAndStikeys({\n                            params: payload,\n                            error: e,\n                        }));\n                        setTimeout(() => {\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                open: true,\n                                title: 'Error',\n                                message: 'Помилка при збереженні: ' + e.message,\n                                singleButton: true,\n                                colorIsSecondary: true,\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                            }));\n                        }, 30);\n                    }\n                })();\n\n                return state;\n            })\n            .case(kanbanBoardActions.doneEditBoardAndStikeys, (state, arg) => {\n                setTimeout(() => {\n                    restartSync()\n                    .then(() => {\n                        //\n                    }).catch(err => {\n                        alert(err.message);\n                    })\n                }, 1500);\n                return arg.result;\n            })\n            .case(kanbanBoardActions.failedEditBoardAndStikeys, (state, arg) => {\n                return state;\n            })\n            ;\n    }\n    return kanbanBoardReducer;\n}\n","import actionCreatorFactory,\n       { Action }             from 'typescript-fsa';\nimport { KanbanRecord,\n         ConfirmDialogProps } from '../types';\n\n\n//інтерфейс дій додатку\nexport interface CalendarActions {\n    showToday: () =>\n        Action<void>;\n    showNextMonth: () =>\n        Action<void>;\n    showPreviousMonth: () =>\n        Action<void>;\n    showNextYear: () =>\n        Action<void>;\n    showPreviousYear: () =>\n        Action<void>;\n\n    // дії з дошкою на полотні календаря\n    changeActiveBoard: (id: string) =>\n        Action<{boardId: string}>;\n    updateBoardName: (v: {boardId: string, boardName: string}) =>\n        Action<{boardId: string, boardName: string}>;\n    updateStikey: (v: KanbanRecord) =>\n        Action<KanbanRecord>;\n    archiveStikey: (kanbanId: string) =>\n        Action<{kanbanId: string}>;\n    deleteStikey: (kanbanId: string) =>\n        Action<{kanbanId: string}>;\n\n    // дії з сповіщеннями на полотні календаря\n    showAlertDialog: (v: ConfirmDialogProps) =>\n        Action<ConfirmDialogProps>;\n    closeAlertDialog: () =>\n        Action<void>;\n}\n\n//методи для створення дій додатку, їх опис\nconst actionCreator = actionCreatorFactory();\n\nexport const calendarActions = {\n    showToday: actionCreator<void>('ACTIONS_SHOW_TODAY'),\n    showNextMonth: actionCreator<void>('ACTIONS_SHOW_NEXT_MONTH'),\n    showPreviousMonth: actionCreator<void>('ACTIONS_SHOW_PREVIOUS_MONTH'),\n    showNextYear: actionCreator<void>('ACTIONS_SHOW_NEXT_YEAR'),\n    showPreviousYear: actionCreator<void>('ACTIONS_SHOW_PREVIOUS_YEAR'),\n};\n","import { reducerWithInitialState,\n         ReducerBuilder }         from 'typescript-fsa-reducers';\nimport { CalendarState }          from '../types';\nimport { calendarActions }        from '../actions/CalendarActions';\n\n\n\nlet calendarReducer: ReducerBuilder<CalendarState, CalendarState> = null as any;\n//обробка станів календаря\nexport async function getCalendarReducer() {\n    if (!calendarReducer) {\n        const initialState: CalendarState = {\n            activeMonth: new Date(), \n        };\n        calendarReducer = reducerWithInitialState(initialState)\n            .case(calendarActions.showToday, (state) => {\n                const now = new Date();\n                const m = new Date(now.getFullYear(), now.getMonth(), 1);\n                return Object.assign({}, state, { activeMonth: m });\n            })\n            .case(calendarActions.showNextMonth, (state) => {\n                const now = state.activeMonth;\n                const m = new Date(now.getFullYear(), now.getMonth() + 1, 1);\n                return Object.assign({}, state, { activeMonth: m });\n            })\n            .case(calendarActions.showPreviousMonth, (state) => {\n                const now = state.activeMonth;\n                const m = new Date(now.getFullYear(), now.getMonth() - 1, 1);\n                return Object.assign({}, state, { activeMonth: m });\n            })\n            .case(calendarActions.showNextYear, (state) => {\n                const now = state.activeMonth;\n                const m = new Date(now.getFullYear() + 1, now.getMonth(), 1);\n                return Object.assign({}, state, { activeMonth: m });\n            })\n            .case(calendarActions.showPreviousYear, (state) => {\n                const now = state.activeMonth;\n                const m = new Date(now.getFullYear() - 1, now.getMonth(), 1);\n                return Object.assign({}, state, { activeMonth: m });\n            })\n            ;\n    }\n    return calendarReducer;\n}\n","import { reducerWithInitialState,\n         ReducerBuilder }         from 'typescript-fsa-reducers';\nimport { AppEventsState }         from '../types';\nimport { appEventsActions }       from '../actions/AppEventsActions';\nimport { getLocalConfigDb,\n         getLocalDb,\n         setRemoteDb }            from '../lib/db';\nimport { getConstructedAppStore } from '../store';\n\n\n\nlet appEventsReducer: ReducerBuilder<AppEventsState, AppEventsState> = null as any;\n//обробка станів додатку/бд/конфігу\nexport async function getAppEventsReducer() {\n    if (!appEventsReducer) {\n        const confDb = getLocalConfigDb();\n        const db = getLocalDb();\n\n        \n        let resp: PouchDB.Core.AllDocsResponse<{}> = null as any;\n\n        resp = await confDb.allDocs({\n            include_docs: true,\n        });\n\n        if (resp.rows.length === 0) {\n            await confDb.post({\n                type: 'appConfig',\n                remoteDbUrl: '',\n                remoteDbUser: '',\n                remoteDbPassword: '',\n            }, {});\n\n            resp = await confDb.allDocs({\n                include_docs: true,\n            });\n        }\n\n        const initialState: AppEventsState = {\n            alertDialog: {\n                open: false,\n                title: '',\n                message: '',\n                onClose: () => void 0,\n            },\n            appConfig: {\n                ...resp.rows[0].doc,\n            } as any,\n        };\n\n        if (initialState.appConfig.remote && initialState.appConfig.remote.endpointUrl) {\n            setRemoteDb(\n                initialState.appConfig.remote.endpointUrl,\n                initialState.appConfig.remote.user || '',\n                initialState.appConfig.remote.password || '',\n            )\n            .then(() => {\n                //\n            })\n            .catch(err => {\n                alert('Помилка підключення до віддаленої бази даних: ' + err.message);\n            });\n        } else {\n            setRemoteDb('', '', '')\n            .then(() => {\n                //\n            })\n            .catch(err => {\n                alert('Помилка підключення до віддаленої бази даних: ' + err.message);\n            });\n        }\n\n        appEventsReducer = reducerWithInitialState(initialState)\n            .case(appEventsActions.showAlertDialog, (state, payload) => {\n                return Object.assign({}, state, {\n                    alertDialog: payload,\n                });\n            })\n            .case(appEventsActions.closeAlertDialog, (state) => {\n                return Object.assign({}, state, {\n                    alertDialog: initialState,\n                });\n            })\n\n            //оновлення конфігу асинхронно\n            .case(appEventsActions.startUpdateAppConfig, (state, payload) => {\n                const newConf = Object.assign({}, state.appConfig,\n                    payload.remote && payload.remote.endpointUrl ?\n                        payload :\n                        {\n                            remote: {\n                                endpointUrl: '',\n                                user: '',\n                                password: '',\n                            }\n                        },\n                );\n\n                confDb.put(newConf, {})\n                .then(v => {\n                    newConf._id = v.id;\n                    newConf._rev = v.rev;\n\n                    getConstructedAppStore().dispatch(appEventsActions.doneUpdateAppConfig({\n                        params: payload,\n                        result: Object.assign({}, state, { appConfig: newConf }),\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Done',\n                            message: 'Налаштування збережено успішно.',\n                            singleButton: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n\n                    if (newConf.remote.endpointUrl) {\n                        setRemoteDb(\n                            newConf.remote.endpointUrl,\n                            newConf.remote.user,\n                            newConf.remote.password,\n                        )\n                        .then(() => {\n                            //\n                        })\n                        .catch(err => {\n                            getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                                open: true,\n                                title: 'Error',\n                                message: 'Помилка підключення до віддаленої бази даних: ' + err.message,\n                                singleButton: true,\n                                colorIsSecondary: true,\n                                onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                            }));\n                        });\n                    }\n                })\n                .catch(err => {\n                    getConstructedAppStore().dispatch(appEventsActions.failedUpdateAppConfig({\n                        params: payload,\n                        error: err,\n                    }));\n                    setTimeout(() => {\n                        getConstructedAppStore().dispatch(appEventsActions.showAlertDialog({\n                            open: true,\n                            title: 'Error',\n                            message: 'Помилка оновлення налаштувань: ' + err.message,\n                            singleButton: true,\n                            colorIsSecondary: true,\n                            onClose: () => getConstructedAppStore().dispatch(appEventsActions.closeAlertDialog()),\n                        }));\n                    }, 30);\n                });\n\n                return state;\n            })\n            .case(appEventsActions.doneUpdateAppConfig, (state, arg) => {\n                return arg.result;\n            })\n            .case(appEventsActions.failedUpdateAppConfig, (state, arg) => {\n                return state;\n            })\n\n            // Асинхронний перезапуск додатку та всіх данних\n            .case(appEventsActions.startResetApplication, (state) => {\n                (async () => {\n                    try {\n                        try {\n                            await setRemoteDb('', '', '');\n                        } catch (e) {\n                            alert(e);\n                        }\n                        try {\n                            await db.destroy({});\n                        } catch (e) {\n                            alert(e);\n                        }\n                        try {\n                            await confDb.destroy({});\n                        } catch (e) {\n                            alert(e);\n                        }\n\n                        alert('Усі дані знищено, перезавантажте сторінку.');\n\n                        getConstructedAppStore().dispatch(appEventsActions.doneResetApplication({\n                            result: state,\n                        }));\n                    } catch (e) {\n                        alert(e);\n                        getConstructedAppStore().dispatch(appEventsActions.failedResetApplication({\n                            error: e,\n                        }));\n                    }\n                })();\n\n                return state;\n            })\n            .case(appEventsActions.doneUpdateAppConfig, (state, arg) => {\n                return arg.result;\n            })\n            .case(appEventsActions.failedUpdateAppConfig, (state, arg) => {\n                return state;\n            })\n            ;\n    }\n    return appEventsReducer;\n}\n","\nimport { createStore,\n         combineReducers, \n         applyMiddleware,\n         compose,\n         Store,\n         AnyAction }             from 'redux';\nimport { createHashHistory }     from 'history';\nimport { connectRouter,\n         routerMiddleware }      from 'connected-react-router';\nimport { AppState }              from './types';\nimport { getKanbanBoardReducer } from './states/KanbanBoardState';\nimport { getCalendarReducer }    from './states/CalendarState';\nimport { getAppEventsReducer }   from './states/AppEventsState';\n\n\n// Створено новий HashHistory\nexport const history = createHashHistory({\n    hashType: 'slash',\n});\n\n//Ініціалізація\nlet store: Store<AppState, AnyAction> = null as any;\n\n//Функція для отримання сховища додатку\nexport function getConstructedAppStore() {\n    return store;\n}\n\n// Отримання асинхронно\nexport default async function getAppStore() {\n    //Створення нового сховища\n    if (!store) {\n        store = createStore(\n            //Підключення усіх змінних\n            combineReducers<AppState>({\n                router: connectRouter(history),\n                appEvents: await getAppEventsReducer(),\n                kanbanBoard: await getKanbanBoardReducer(),\n                calendar: await getCalendarReducer(),\n            }),\n            compose(\n                applyMiddleware(\n                    routerMiddleware(history), //Надсилання дій маршрутизатора\n                ),\n            ),\n        );\n    }\n    return store;\n}\n","import React                      from 'react';\nimport { connect }                from 'react-redux';\nimport { RouteComponentProps }    from 'react-router-dom';\nimport { makeStyles,\n         useTheme }               from '@material-ui/core/styles';\nimport Typography                 from '@material-ui/core/Typography';\nimport IconButton                 from '@material-ui/core/IconButton';\nimport AddBoxIcon                 from '@material-ui/icons/AddBox';\nimport clsx                       from 'clsx';\nimport marked                     from 'marked';\nimport { Qr }                     from 'red-agate-barcode';\nimport { LaneDef,\n         StatusLaneDef,\n         KanbanRecord,\n         KanbanBoardState, \n         KanbanBoardRecord }      from '../types';\nimport gensym                     from '../lib/gensym';\nimport { parseISODate }           from '../lib/datetime';\nimport { isDark }                 from '../lib/theme';\nimport { mapDispatchToProps,\n         mapStateToProps,\n         KanbanBoardActions }     from '../dispatchers/KanbanBoardDispatcher';\nimport KanbanDialog               from '../components/KanbanDialog';\nimport TextInputDialog            from '../components/TextInputDialog';\nimport { getConstructedAppStore } from '../store';\nimport                                 './KanbanBoardView.css';\n\n\n//картки\ntype StikeysProps = KanbanBoardActions & {\n    records: KanbanRecord[],\n    taskStatus: StatusLaneDef,\n    teamOrStory: LaneDef,\n    taskStatuses: StatusLaneDef[],\n    teamOrStories: LaneDef[],\n    board: KanbanBoardRecord,\n};\n\ntype StikeyProps = KanbanBoardActions & {\n    record: KanbanRecord,\n    taskStatus: StatusLaneDef,\n    teamOrStory: LaneDef,\n    taskStatuses: StatusLaneDef[],\n    teamOrStories: LaneDef[],\n    board: KanbanBoardRecord,\n};\n\ntype KanbanBoardViewProps = KanbanBoardState & KanbanBoardActions & RouteComponentProps<{id: string}> & {\n}; //Властивості дошки, стан, дії, маршрут\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {},\n    smallIcon: {\n        width: '20px',\n        height: '20px',\n    },\n}));\n\n\nconst mapNeverStateToProps = () => ({}); //маппер\n\nconst agent = window.navigator.userAgent.toLowerCase();\nconst firefox = (agent.indexOf('firefox') !== -1);\n\n\nconst Stikey_: React.FC<StikeyProps> = (props) => {\n    const [open, setOpen] = React.useState(false);\n    // змінні для роботи з датою при відкритті діалогу\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const dueDate = props.record.dueDate ? parseISODate(props.record.dueDate) : null;\n    const expired = (! props.taskStatus.completed) &&\n        (dueDate ? dueDate < today : false);\n    //дані для drag-методу\n    function handleOnDragStart(ev: React.DragEvent) {\n        ev.dataTransfer.setData('elId', (ev.target as any).id);\n    }\n    //оновлення\n    function handleEditApply(rec: KanbanRecord) {\n        props.updateStikey(rec);\n        setOpen(false);\n    }\n    //архівування\n    function handleArchive(id: string) {\n        props.archiveStikey(id);\n        setOpen(false);\n    }\n    //видалення\n    function handleDelete(id: string) {\n        props.deleteStikey(id);\n        setOpen(false);\n    }\n    //зміна\n    function handleEditCancel() {\n        setOpen(false);\n    }\n    // сторінка ділогового вікна \n    return (\n        <>\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n            <a\n                id={gensym()}\n                data-record-id={props.record._id || ''}\n                className=\"KanbanBoardView-sticky-link\"\n                draggable\n                onClick={ev => setOpen(true)}\n                onDragStart={handleOnDragStart}>\n                <div\n                    className={'KanbanBoardView-sticky-note' + (expired ? ' expired' : '')} >\n                    {props.board.displayTags && props.record.tags.length ?\n                        <ul className=\"KanbanBoardView-sticky-tags\">{\n                            props.record.tags.map((x, index) => {\n                                const tags = props.board.tags || [];\n                                const matched = tags.find(q => q.value === x);\n                                return (\n                                    <li key={props.record._id + '-tag-' + index}\n                                        className={matched ? matched.className : ''}>{x}</li>\n                                );\n                            })\n                        }</ul> :\n                        <></>\n                    }\n                    <div\n                        className=\"KanbanBoardView-sticky-description\"\n                        dangerouslySetInnerHTML={{__html: marked(props.record.description)}} />\n                    {props.board.displayBarcode && props.record.barcode ?\n                        <div className=\"KanbanBoardView-sticky-barcode\"\n                            dangerouslySetInnerHTML={{__html: new Qr({\n                            fill: true,\n                            fillColor: isDark ? '#fff' : '#000',\n                            cellSize: 2,\n                            unit: 'px',\n                            data: props.record.barcode,\n                        }).toImgTag()}} />\n                        : <></>\n                    }\n                    {props.record.flags.includes('Marked') ?\n                        <div className=\"marked\">{'📍'}</div> :\n                        <></>\n                    }\n                    {props.record.dueDate ?\n                        <div className=\"due-date\">{(expired ? '🔥' : '⏳' ) + props.record.dueDate}</div> :\n                        <></>\n                    }\n                </div>\n            </a> \n            {open ? //обробка запитів\n                <KanbanDialog\n                    open={true}\n                    record={props.record}\n                    teamOrStories={props.teamOrStories}\n                    taskStatuses={props.taskStatuses}\n                    board={props.board}\n                    onApply={handleEditApply}\n                    onArchive={handleArchive}\n                    onDelete={handleDelete}\n                    onCancel={handleEditCancel} /> : <></>\n            }\n        </>\n    );\n}//підключення\nconst Stikey = connect(mapNeverStateToProps, mapDispatchToProps)(Stikey_);\n\n//оновлення даних при перенесені наліпки на інше місце та видалення\nconst Stikeys_: React.FC<StikeysProps> = (props) => {\n    function handleOnDragOver(ev: React.DragEvent) {\n        ev.preventDefault();\n    }\n\n    function handleOnDrop(ev: React.DragEvent) {\n        try {\n            const elId = ev.dataTransfer.getData('elId');\n            const el = document.getElementById(elId);\n            props.updateStikeyLanes({\n                kanbanId: (el as any).dataset.recordId,\n                taskStatusValue: props.taskStatus.value,\n                teamOrStoryValue: props.teamOrStory.value,\n            })\n        } catch (e) {\n            alert(e.message);\n        }\n        ev.preventDefault();\n    }\n\n    return (\n        <div\n            className={\n                'KanbanBoardView-sticky-wrap ' + \n                (props.teamOrStory.className || '') + ' ' +\n                (props.taskStatus.className || '')}\n            data-status={props.taskStatus.value}\n            data-team-or-story={props.teamOrStory.value}\n            onDragOver={handleOnDragOver}\n            onDrop={handleOnDrop}\n            >\n            {props.records.filter(x => !x.flags || !x.flags.includes('Archived')).map(record => (\n                <Stikey\n                    key={record._id || gensym()}\n                    teamOrStory={props.teamOrStory}\n                    taskStatus={props.taskStatus}\n                    teamOrStories={props.teamOrStories}\n                    taskStatuses={props.taskStatuses}\n                    board={props.board}\n                    record={record}/>\n            ))}{\n                \n                firefox ? <>&nbsp;</> : <></>\n            }\n        </div>\n    );\n}\nconst Stikeys = connect(mapNeverStateToProps, mapDispatchToProps)(Stikeys_);\n\n\nconst KanbanBoardView: React.FC<KanbanBoardViewProps> = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [textInputOpen, setTextInputOpen] = React.useState({\n        open: false,\n        title: '',\n        message: '',\n        fieldLabel: '',\n        value: '',\n        validator: (value: string) => value.trim().length <= 0,\n        onClose: handleCloseDialogEditBoardName,\n    });\n    //зміна назви\n    function handleClickEditBoardName() {\n        const currentState = getConstructedAppStore().getState();\n        setTextInputOpen(Object.assign({}, textInputOpen, {\n            open: true,\n            title: 'Змінити назву дошки',\n            message: '',\n            fieldLabel: 'Назва',\n            value: currentState.kanbanBoard.activeBoard.name,\n        }));\n    }\n    //закриття діалогу\n    function handleCloseDialogEditBoardName(apply: boolean, value?: string) {\n        setTextInputOpen(Object.assign({}, textInputOpen, { open: false }));\n        if (apply && value) {\n            const currentState = getConstructedAppStore().getState();\n            props.updateBoardName({ boardId: currentState.kanbanBoard.activeBoardId, boardName: value });\n        }\n    }\n    //перевірка чи дошка існує в пошуковому рядку\n    if (props.match.params.id) {\n        if (props.activeBoard._id !== props.match.params.id) {\n            const index = props.boards.findIndex(x => x._id === props.match.params.id);\n            props.changeActiveBoard(props.match.params.id);\n            return (\n                <div className=\"KanbanBoardView-content\">\n                    {index < 0 ?\n                        <>\n                            <Typography\n                                style={{marginTop: theme.spacing(10)}}\n                                variant=\"h4\" align=\"center\">\n                                Не знайдено.\n                            </Typography>\n                            <Typography\n                                style={{marginTop: theme.spacing(5), cursor: 'pointer', textDecoration: 'underline'}}\n                                variant=\"body1\" align=\"center\"\n                                onClick={ev => {props.history.push('/')}} >\n                                Нажміть сюди для основної дошки.\n                            </Typography>\n                        </> :\n                        <></>\n                    }\n                </div>\n            );\n        }\n    }\n    //сторінка\n    return (\n        <div className=\"KanbanBoardView-content\">\n            <style dangerouslySetInnerHTML={{__html: props.activeBoard.boardStyle}}></style>\n            <Typography\n                variant=\"h6\" align=\"center\" style={{cursor: 'pointer'}}\n                onClick={handleClickEditBoardName} >{props.activeBoard.name}</Typography>\n            <table className=\"KanbanBoardView-board\">\n                <thead>\n                    <tr>\n                        <th className=\"KanbanBoardView-header-cell-add-stikey\">\n                            <IconButton style={{margin: 0, padding: 0}}\n                                        onClick={ev => props.addStikey()}>\n                                <AddBoxIcon className={clsx(classes.smallIcon)} />\n                            </IconButton>\n                        </th>\n                        {props.activeBoard.taskStatuses.map(taskStatus => (\n                            <th key={taskStatus.value}\n                                className={\n                                    'KanbanBoardView-header-cell-task-statuses ' +\n                                    (taskStatus.className || '')}>\n                                {taskStatus.caption || taskStatus.value}\n                            </th>\n                        ))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.activeBoard.teamOrStories.map(teamOrStory => (\n                        <tr key={teamOrStory.value}>\n                            <th className={\n                                'KanbanBoardView-header-cell-team-or-stories ' +\n                                (teamOrStory.className || '')}>\n                                {teamOrStory.caption || teamOrStory.value}\n                            </th>\n                            {props.activeBoard.taskStatuses.map(taskStatus => (\n                                <td key={taskStatus.value}\n                                    className={\n                                        (teamOrStory.className || '') + ' ' +\n                                        (taskStatus.className || '')}>\n                                    <Stikeys\n                                        teamOrStory={teamOrStory}\n                                        taskStatus={taskStatus}\n                                        teamOrStories={props.activeBoard.teamOrStories}\n                                        taskStatuses={props.activeBoard.taskStatuses}\n                                        board={props.activeBoard}\n                                        records={props.activeBoard.records.filter(\n                                            x => x.teamOrStory === teamOrStory.value &&\n                                                 x.taskStatus  === taskStatus.value)} />\n                                </td>\n                            ))}\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            {textInputOpen.open ?\n                <TextInputDialog\n                    open={true}\n                    title={textInputOpen.title}\n                    message={textInputOpen.message}\n                    fieldLabel={textInputOpen.fieldLabel}\n                    value={textInputOpen.value}\n                    validator={textInputOpen.validator}\n                    onClose={textInputOpen.onClose} /> :\n                <></>\n            }\n        </div>\n    );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(KanbanBoardView);\n","import { Action }             from 'typescript-fsa';\nimport { Dispatch }           from 'redux';\nimport { KanbanRecord,\n         ConfirmDialogProps,\n         AppState }           from '../types';\nimport { AppEventsActions as AppEventsActions_,\n         appEventsActions }   from '../actions/AppEventsActions';\nimport { CalendarActions as CalendarActions_,\n         calendarActions }    from '../actions/CalendarActions';\nimport { KanbanBoardActions as KanbanBoardActions_,\n         kanbanBoardActions } from '../actions/KanbanBoardActions';\n\n\n\nexport type AppEventsActions = AppEventsActions_;\nexport type CalendarActions = CalendarActions_;\nexport type KanbanBoardActions = KanbanBoardActions_;\n\n//зв'язок додатку з redux store\n\nexport function mapDispatchToProps(dispatch: Dispatch<Action<any>>) {\n    return {\n        showToday: () =>\n            dispatch(calendarActions.showToday()),\n        showNextMonth: () =>\n            dispatch(calendarActions.showNextMonth()),\n        showPreviousMonth: () =>\n            dispatch(calendarActions.showPreviousMonth()),\n        showNextYear: () =>\n            dispatch(calendarActions.showNextYear()),\n        showPreviousYear: () =>\n            dispatch(calendarActions.showPreviousYear()),\n\n        // AppEventsActions\n        showAlertDialog: (v: ConfirmDialogProps) =>\n            dispatch(appEventsActions.showAlertDialog(v)),\n        closeAlertDialog: () =>\n            dispatch(appEventsActions.closeAlertDialog()),\n\n        // KanbanBoardActions\n        changeActiveBoard: (boardId: string) =>\n            dispatch(kanbanBoardActions.startChangeActiveBoard(Object.assign({}, { boardId }, { dispatch }))),\n        updateBoardName: (v: {boardId: string, boardName: string}) =>\n            dispatch(kanbanBoardActions.startUpdateBoardName(v)),\n        updateStikey: (v: KanbanRecord) =>\n            dispatch(kanbanBoardActions.startUpdateStikey(Object.assign({}, v, { dispatch }))),\n        archiveStikey: (kanbanId: string) =>\n            dispatch(kanbanBoardActions.startArchiveStikey({ kanbanId })),\n        deleteStikey: (kanbanId: string) =>\n            dispatch(kanbanBoardActions.startDeleteStikey(Object.assign({}, { kanbanId }, { dispatch }))),\n    }\n}\n\n\nexport function mapStateToProps(appState: AppState) {\n    return Object.assign({}, { kanbanBoardState: appState.kanbanBoard }, appState.calendar);\n}\n","import React                      from 'react';\nimport { connect }                from 'react-redux';\nimport { RouteComponentProps }    from 'react-router-dom';\nimport { makeStyles,\n         useTheme }               from '@material-ui/core/styles';\nimport Typography                 from '@material-ui/core/Typography';\nimport IconButton                 from '@material-ui/core/IconButton';\nimport ChevronLeftIcon            from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon           from '@material-ui/icons/ChevronRight';\nimport SkipPreviousIcon           from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon               from '@material-ui/icons/SkipNext';\nimport CalendarTodayIcon          from '@material-ui/icons/CalendarToday';\nimport clsx                       from 'clsx';\nimport { KanbanRecord,\n         CalendarState,\n         KanbanBoardState, \n         KanbanBoardRecord }      from '../types';\nimport { parseISODate }           from '../lib/datetime';\nimport { mapDispatchToProps,\n         mapStateToProps,\n         CalendarActions }        from '../dispatchers/CalendarViewDispatcher';\nimport KanbanDialog               from '../components/KanbanDialog';\nimport TextInputDialog            from '../components/TextInputDialog';\nimport { getConstructedAppStore } from '../store';\nimport                                 './CalendarView.css';\n\n\n//властивості, параметри\ntype CalendarItemProps = CalendarState & CalendarActions &\n        { kanbanBoardState: KanbanBoardState } & {\n    board: KanbanBoardRecord,\n    record: KanbanRecord,\n};\n\n\ntype CalendarViewProps = CalendarState & CalendarActions &\n        { kanbanBoardState: KanbanBoardState } & RouteComponentProps<{id: string}> & {\n};\n\n//стилі\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        color: 'var(--main-text-color)',\n        backgroundColor: 'var(--main-bg-color)',\n    },\n    calendar: {\n        width: 'calc(100% - 30px)',\n        height: '100%',\n        margin: '15px',\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        tableLayout: 'fixed',\n    },\n    calendarTitle: {\n        position: 'relative',\n        height: '30px',\n    },\n    calendarTitleToolBar: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        margin: '3px 3px 6px 4px',\n        overflow: 'hidden',\n        width: 'calc(100% - 30px)',\n        height: '39px',\n    },\n    calendarTopLeftHeader: {\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        padding: '5px',\n    },\n    calendarDaysHeader: {\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        padding: '5px',\n        width: '14%',\n    },\n    calendarSundayHeader: {\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        padding: '5px',\n        width: '14%',\n        backgroundColor: 'var(--weak-header-bg-color)',\n        color: 'var(--calendar-sunday-color)',\n    },\n    calendarSaturdayHeader: {\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        padding: '5px',\n        width: '14%',\n        backgroundColor: 'var(--weak-header-bg-color)',\n        color: 'var(--calendar-saturday-color)',\n    },\n    calendarCell: {\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        padding: '5px',\n        verticalAlign: 'top',\n    },\n    calendarWeekendCell: {\n        border: 'solid 1px var(--main-text-color)',\n        borderCollapse: 'collapse',\n        padding: '5px',\n        verticalAlign: 'top',\n        backgroundColor: 'var(--weak-data-bg-color)',\n    },\n    chip: {\n        fontSize: 'smaller',\n        borderRadius: '5px',\n        backgroundColor:'var(--sticky-blue-color)',\n        color: 'var(--main-text-color)',\n        width: '100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        marginBottom: '2px',\n        paddingLeft: '3px',\n        paddingRight: '3px',\n    },\n    chipWrap: {\n        '&:hover': {\n            cursor: 'pointer',\n        }\n    }\n}));\n\n\nconst CalendarItem_: React.FC<CalendarItemProps> = (props) => {\n    //змінні\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const teamOrStory = props.board.teamOrStories.find(x => x.value === props.record.teamOrStory);\n    const taskStatus = props.board.taskStatuses.find(x => x.value === props.record.taskStatus);\n\n    const now = new Date();\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    const dueDate = props.record.dueDate ? parseISODate(props.record.dueDate) : null;\n    const expired = (! (taskStatus && taskStatus.completed)) &&\n        (dueDate ? dueDate < today : false);\n    //зміна\n    function handleEditApply(rec: KanbanRecord) {\n        props.updateStikey(rec);\n        setOpen(false);\n    }\n    //архівування\n    function handleArchive(id: string) {\n        props.archiveStikey(id);\n        setOpen(false);\n    }\n    //видалення\n    function handleDelete(id: string) {\n        props.deleteStikey(id);\n        setOpen(false);\n    }\n    //відміна змін\n    function handleEditCancel() {\n        setOpen(false);\n    }\n    //обробка запитів\n    return (\n        <>\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n            <a\n                className={clsx(classes.chipWrap)}\n                onClick={ev => setOpen(true)}>\n                <div className={clsx(classes.chip) + ' CalendarView-item-chip' +\n                    (teamOrStory ? ' ' + teamOrStory.className : '') +\n                    (taskStatus ? ' ' + taskStatus.className : '') +\n                    (expired ? ' протерміновано' : '')}>\n                    {props.record.description.trim().replace(/\\n/g, ' ').replace(/#+/g, '').trim()}\n                </div>\n            </a>\n            {open ?\n                <KanbanDialog\n                    open={true}\n                    record={props.record}\n                    teamOrStories={props.kanbanBoardState.activeBoard.teamOrStories}\n                    taskStatuses={props.kanbanBoardState.activeBoard.taskStatuses}\n                    board={props.board}\n                    onApply={handleEditApply}\n                    onArchive={handleArchive}\n                    onDelete={handleDelete}\n                    onCancel={handleEditCancel} /> : <></>\n            }\n        </>\n    );\n}\nconst CalendarItem = connect(mapStateToProps, mapDispatchToProps)(CalendarItem_);\n    // вигляд при кліку\nconst CalendarView: React.FC<CalendarViewProps> = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [textInputOpen, setTextInputOpen] = React.useState({\n        open: false,\n        title: '',\n        message: '',\n        fieldLabel: '',\n        value: '',\n        validator: (value: string) => value.trim().length <= 0,\n        onClose: handleCloseDialogEditBoardName,\n    });\n    // змінити назву\n    function handleClickEditBoardName() {\n        const currentState = getConstructedAppStore().getState();\n        setTextInputOpen(Object.assign({}, textInputOpen, {\n            open: true,\n            title: 'Змінити назву дошки',\n            message: '',\n            fieldLabel: 'Назва дошки',\n            value: currentState.kanbanBoard.activeBoard.name,\n        }));\n    }\n    // закрити діалог\n    function handleCloseDialogEditBoardName(apply: boolean, value?: string) {\n        setTextInputOpen(Object.assign({}, textInputOpen, { open: false }));\n        if (apply && value) {\n            const currentState = getConstructedAppStore().getState();\n            props.updateBoardName({ boardId: currentState.kanbanBoard.activeBoardId, boardName: value });\n        }\n    }\n    //перевірка на існування дошки\n    if (props.match.params.id) {\n        if (props.kanbanBoardState.activeBoard._id !== props.match.params.id) {\n            const index = props.kanbanBoardState.boards.findIndex(x => x._id === props.match.params.id);\n            props.changeActiveBoard(props.match.params.id);\n            return (\n                <div className={classes.root}>\n                    {index < 0 ?\n                        <>\n                            <Typography\n                                style={{marginTop: theme.spacing(10)}}\n                                variant=\"h4\" align=\"center\">\n                                Не знайдено дошки.\n                            </Typography>\n                            <Typography\n                                style={{marginTop: theme.spacing(5), cursor: 'pointer', textDecoration: 'underline'}}\n                                variant=\"body1\" align=\"center\"\n                                onClick={ev => {props.history.push('/')}} >\n                                Натисність сюди для переходу на основну дошку.\n                            </Typography>\n                        </> :\n                        <></>\n                    }\n                </div>\n            );\n        }\n    }\n  //робота з датами\n    const month = props.activeMonth;\n\n    const firstDateOfMonth = new Date(month.getFullYear(), month.getMonth(), 1);\n    const lastDateOfMonth = new Date(month.getFullYear(), month.getMonth() + 1, 0);\n    const firstDateOfCal = new Date(\n        firstDateOfMonth.getFullYear(), firstDateOfMonth.getMonth(),\n        1 - firstDateOfMonth.getDay());\n    const lastDateOfCal = new Date(\n        lastDateOfMonth.getFullYear(), lastDateOfMonth.getMonth(),\n        lastDateOfMonth.getDate() + (6 - lastDateOfMonth.getDay()));\n    const nextCalDate = new Date(\n        lastDateOfCal.getFullYear(), lastDateOfCal.getMonth(),\n        lastDateOfCal.getDate() + 1);\n      \n    const dates: Array<Date[]> = [];\n    let week: Date[] = [];\n    dates.push(week);\n    for (let wd = firstDateOfCal;\n            wd.getTime() <= lastDateOfCal.getTime();\n            wd = new Date(wd.getFullYear(), wd.getMonth(), wd.getDate() + 1)) {\n        if (7 <= week.length) {\n            week = [];\n            dates.push(week);\n        }\n        week.push(wd);\n    }\n\n    const stikeys = props.kanbanBoardState.activeBoard.records.filter(x => {\n        if (x.flags && x.flags.includes('Archived')) {\n            return false;\n        }\n        if (!x.dueDate) {\n            return false;\n        }\n        const d = new Date(x.dueDate);\n        if (firstDateOfCal <= d && d < nextCalDate) {\n            return true;\n        } else {\n            return false;\n        }\n    });\n    //сторінка\n    return (\n        <div className={clsx(classes.root)}>\n            <style dangerouslySetInnerHTML={{__html: props.kanbanBoardState.activeBoard.calendarStyle}}></style>\n            <div className={clsx(classes.calendarTitle)}>\n                <div className={clsx(classes.calendarTitleToolBar)}>\n                    <IconButton onClick={ev => props.showToday()}>\n                        <CalendarTodayIcon /><Typography variant=\"caption\" style={{marginLeft: '1em'}}>Сьогодні</Typography>\n                    </IconButton>\n                    <IconButton onClick={ev => props.showPreviousYear()}>\n                        <SkipPreviousIcon />\n                    </IconButton>\n                    <IconButton onClick={ev => props.showPreviousMonth()}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                    <IconButton onClick={ev => props.showNextMonth()}>\n                        <ChevronRightIcon />\n                    </IconButton>\n                    <IconButton onClick={ev => props.showNextYear()}>\n                        <SkipNextIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" display=\"inline\" style={{marginLeft: '2em'}}>{\n                        props.activeMonth.toLocaleDateString(\n                            (navigator as any).userLanguage || navigator.language || (navigator as any).browserLanguage || 'en',\n                            {year: 'numeric', month: 'long'})\n                    }</Typography>\n                    <Typography variant=\"h6\" display=\"inline\" style={{marginLeft: '3em', cursor: 'pointer'}}\n                        onClick={handleClickEditBoardName} >{\n                        props.kanbanBoardState.activeBoard.name}</Typography>\n                </div>\n            </div>\n            <table className={clsx(classes.calendar)}>\n                <thead>\n                    <tr>\n                        <th className={clsx(classes.calendarTopLeftHeader)}></th>\n                        <th className={clsx(classes.calendarSundayHeader)}>Сб</th>\n                        <th className={clsx(classes.calendarDaysHeader)}>Пн</th>\n                        <th className={clsx(classes.calendarDaysHeader)}>Вт</th>\n                        <th className={clsx(classes.calendarDaysHeader)}>Ср</th>\n                        <th className={clsx(classes.calendarDaysHeader)}>Чт</th>\n                        <th className={clsx(classes.calendarDaysHeader)}>Пт</th>\n                        <th className={clsx(classes.calendarSaturdayHeader)}>Нд</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {dates.map(week =>\n                        <tr key={week[0].getTime()}>\n                            <td className={clsx(classes.calendarCell)}></td>\n                            {week.map((wd: Date, index: number) =>\n                                <td key={wd.toISOString()}\n                                    className={clsx(index === 0 || index === 6 ? classes.calendarWeekendCell :classes.calendarCell)}>\n                                    <div style={{position: 'relative'}}>\n                                        <div style={{position: 'absolute', top: '0', right: '0'}}>\n                                            {wd.getDate()}\n                                        </div>\n                                        <div style={{paddingTop: '20px', minHeight: '80px'}}>\n                                            {stikeys.filter(x => {\n                                                const d = new Date(x.dueDate);\n                                                const next = new Date(wd.getFullYear(), wd.getMonth(), wd.getDate() + 1);\n                                                if (wd <= d && d < next) {\n                                                    return true;\n                                                } else {\n                                                    return false;\n                                                }\n                                            }).map(x =>\n                                                <CalendarItem\n                                                    board={props.kanbanBoardState.activeBoard}\n                                                    key={x._id}\n                                                    record={x} />\n                                            )}\n                                        </div>\n                                    </div>\n                                </td>\n                            )}\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n            {textInputOpen.open ?\n                <TextInputDialog\n                    open={true}\n                    title={textInputOpen.title}\n                    message={textInputOpen.message}\n                    fieldLabel={textInputOpen.fieldLabel}\n                    value={textInputOpen.value}\n                    validator={textInputOpen.validator}\n                    onClose={textInputOpen.onClose} /> :\n                <></>\n            }\n        </div>\n    );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarView);\n","import { KanbanBoardRecord,\n         KanbanRecord,\n         AppConfig }       from '../types';\n\n\n//валідація\nexport function pickEditableStikeyProps(stikey: KanbanRecord) {\n    return (Object.assign(stikey._id ? { _id: stikey._id } : {}, {\n        dueDate: stikey.dueDate || '',\n        taskStatus: stikey.taskStatus || '',\n        teamOrStory: stikey.teamOrStory || '',\n        flags: stikey.flags || [],\n        tags: stikey.tags || [],\n        description: stikey.description || '',\n        barcode: stikey.barcode || '',\n        memo: stikey.memo || '',\n    }));\n}\n\n\nexport function pickEditableBoardProps(board: KanbanBoardRecord) {\n    return ({\n        name: board.name || '',\n        taskStatuses: board.taskStatuses || [],\n        teamOrStories: board.teamOrStories || [],\n        tags: board.tags || [],\n        displayBarcode: !!board.displayBarcode,\n        displayMemo: !!board.displayMemo,\n        displayFlags: !!board.displayFlags,\n        displayTags: !!board.displayTags,\n        preferArchive: !!board.preferArchive,\n        boardStyle: board.boardStyle || '',\n        calendarStyle: board.calendarStyle || '',\n        records: (board.records && board.records.map(x => pickEditableStikeyProps(x))) || [],\n    });\n}\n\n\nexport function validateStikeyProps(stikey: KanbanRecord) {\n    if (typeof stikey.dueDate !== 'string') {\n        throw new Error('потрібна текстова змінна \"dueDate\".');\n    }\n    if (typeof stikey.taskStatus !== 'string') {\n        throw new Error('потрібна текстова змінна\"taskStatus\".');\n    }\n    if (typeof stikey.teamOrStory !== 'string') {\n        throw new Error('потрібна текстова змінна\"teamOrStory\".');\n    }\n    if (stikey.flags && Array.isArray(stikey.flags)) {\n        stikey.flags.forEach(x => {\n            if (typeof x !== 'string') {\n                throw new Error('змінна \"flags[x]\" повинна бути текстовою.');\n            }\n        });\n    } else {\n        throw new Error('потрібен масив змінних \"flags\".');\n    }\n    if (stikey.tags && Array.isArray(stikey.tags)) {\n        stikey.tags.forEach(x => {\n            if (typeof x !== 'string') {\n                throw new Error('змінна\"tags[x]\" повинна бути текстовою.');\n            }\n        });\n    } else {\n        throw new Error('потрібен масив змінних \"tags\".');\n    }\n    if (typeof stikey.description !== 'string') {\n        throw new Error('потрібна текстова змінна \"description\".');\n    }\n    if (typeof stikey.barcode !== 'string') {\n        throw new Error('потрібна текстова змінна \"barcode\".');\n    }\n    if (typeof stikey.memo !== 'string') {\n        throw new Error('потрібна текстова змінна \"memo\".');\n    }\n    return stikey;\n}\n\n\nexport function validateBoardProps(board: KanbanBoardRecord) {\n    if (typeof board.name !== 'string') {\n        throw new Error('потрібна текстова змінна \"name\".');\n    }\n    if (board.taskStatuses && Array.isArray(board.taskStatuses)) {\n        board.taskStatuses.forEach(x => {\n            if (x.caption !== null && x.caption !== void 0 && typeof x.caption !== 'string') {\n                throw new Error('змінна\"taskStatuses[x].caption\" повинна бути текстовою.');\n            }\n            if (x.className !== null && x.className !== void 0 && typeof x.className !== 'string') {\n                throw new Error('змінна \"taskStatuses[x].className\" повинна бути текстовою.');\n            }\n            if (x.completed !== null && x.completed !== void 0 && typeof x.completed !== 'boolean') {\n                throw new Error('змінна \"taskStatuses[x].completed\" повинна бути типу bool.');\n            }\n            if (typeof x.value !== 'string') {\n                throw new Error('потрібна текстова змінна \"taskStatuses[x].value\".');\n            }\n        });\n    } else {\n        throw new Error('потрібен масив значень \"taskStatuses\".');\n    }\n    if (board.teamOrStories && Array.isArray(board.teamOrStories)) {\n        board.teamOrStories.forEach(x => {\n            if (x.caption !== null && x.caption !== void 0 && typeof x.caption !== 'string') {\n                throw new Error('змінна \"teamOrStories[x].caption\" повинна бути текстовою.');\n            }\n            if (x.className !== null && x.className !== void 0 && typeof x.className !== 'string') {\n                throw new Error('змінна \"teamOrStories[x].className\" повинна бути текстовою.');\n            }\n            if (typeof x.value !== 'string') {\n                throw new Error('потрібна текстова змінна \"teamOrStories[x].value\".');\n            }\n        });\n    } else {\n        throw new Error('потрібен масив змінних \"teamOrStories\".');\n    }\n    if (board.tags && Array.isArray(board.tags)) {\n        board.tags.forEach(x => {\n            if (x.className !== null && x.className !== void 0 && typeof x.className !== 'string') {\n                throw new Error('змінна \"tags[x].className\" повинна бути текстовою.');\n            }\n            if (typeof x.value !== 'string') {\n                throw new Error('потрібна текстова змінна \"tags[x].value\".');\n            }\n        });\n    } else {\n        throw new Error('потрібен масив змінних \"tags\".');\n    }\n    if (typeof board.displayBarcode !== 'boolean') {\n        throw new Error('потрібна змінна типу bool \"displayBarcode\".');\n    }\n    if (typeof board.displayMemo !== 'boolean') {\n        throw new Error('потрібна змінна типу bool \"displayMemo\".');\n    }\n    if (typeof board.displayFlags !== 'boolean') {\n        throw new Error('потрібна змінна типу bool \"displayFlags\".');\n    }\n    if (typeof board.displayTags !== 'boolean') {\n        throw new Error('потрібна змінна типу bool \"displayTags\".');\n    }\n    if (typeof board.preferArchive !== 'boolean') {\n        throw new Error('потрібна змінна типу bool \"preferArchive\".');\n    }\n    if (typeof board.boardStyle !== 'string') {\n        throw new Error('потрібна текстова змінна \"boardStyle\".');\n    }\n    if (typeof board.calendarStyle !== 'string') {\n        throw new Error('потрібна текстова змінна \"calendarStyle\".');\n    }\n\n    if (board.records && Array.isArray(board.records)) {\n        board.records.forEach(x => validateStikeyProps(x));\n    } else {\n        throw new Error('потрібен масив змінних \"records\".');\n    }\n\n    return board;\n}\n\n\nexport function pickEditableConfigProps(conf: AppConfig) {\n    return ({\n        remote: {\n            endpointUrl: conf.remote && conf.remote.endpointUrl ?\n                conf.remote.endpointUrl : '',\n            user: conf.remote && conf.remote.user ?\n                conf.remote.user : '',\n            password: conf.remote && conf.remote.password ?\n                conf.remote.password : '',\n        }\n    });\n}\n\n\nexport function validateConfigProps(conf: AppConfig) {\n    if (! conf.remote) {\n        throw new Error('потрібне значення \"remote\".');\n    }\n    if (typeof conf.remote.endpointUrl !== 'string') {\n        throw new Error('потрібно текстове значення \"remote.endpointUrl\".');\n    }\n    if (typeof conf.remote.user !== 'string') {\n        throw new Error('потрібно текстове значення \"remote.user\".');\n    }\n    if (typeof conf.remote.password !== 'string') {\n        throw new Error('потрібно текстове значення \"remote.password\".');\n    }\n    return conf;\n}\n","\nimport React                          from 'react';\nimport { connect }                    from 'react-redux';\nimport { RouteComponentProps }        from 'react-router-dom';\nimport { makeStyles,\n         useTheme }                   from '@material-ui/core/styles';\nimport Button                         from '@material-ui/core/Button';\nimport CheckIcon                      from '@material-ui/icons/Check';\nimport DeleteIcon                     from '@material-ui/icons/Delete';\nimport Typography                     from '@material-ui/core/Typography';\nimport Fab                            from '@material-ui/core/Fab';\nimport clsx                           from 'clsx';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport                                     'codemirror/lib/codemirror.css';\nimport                                     'codemirror/theme/material.css';\nimport                                     'codemirror/mode/yaml/yaml';\nimport jsYaml                         from 'js-yaml';\nimport { KanbanBoardState }           from '../types';\nimport { mapDispatchToProps,\n         mapStateToProps,\n         KanbanBoardActions }         from '../dispatchers/KanbanBoardDispatcher';\nimport ConfirmDialog                  from '../components/ConfirmDialog';\nimport { pickEditableBoardProps,\n         validateBoardProps }         from '../lib/validation';\nimport                                     './EditorView.css';\n\n\n//властивості\ntype EditorViewProps = KanbanBoardState & KanbanBoardActions & RouteComponentProps<{id: string}> & {\n};\n\n//стилі\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        color: 'var(--main-text-color)',\n        backgroundColor: 'var(--main-bg-color)',\n        width: '100%',\n        height: '100%',\n    },\n    header: {\n        height: '45px',\n        position: 'relative',\n    },\n    codemirror: {\n        display: 'grid',\n        width: 'calc(100% - 20px)',\n        height: 'calc(100vh - 65px)',\n    },\n    fabSave: {\n        position: 'absolute',\n        margin: theme.spacing(1),\n        left: theme.spacing(1),\n        top: theme.spacing(1) / 10,\n    },\n    fabDelete: {\n        position: 'absolute',\n        margin: theme.spacing(1),\n        right: theme.spacing(1),\n        top: theme.spacing(1) / 10,\n    },\n}));\n\n\nconst EditorView: React.FC<EditorViewProps> = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [confirmDeletingOpen, setConfirmDeletingOpen] = React.useState(false);\n    const [editorValue, setEditorValue] = React.useState('');\n    const [editCount, setEditCount] = React.useState(0);\n    \n    //кнопка \"зберегти\"\n    function handleSaveClick() {\n        try {\n            const data = jsYaml.safeLoad(editorValue);\n            if (data) {\n                validateBoardProps(data);\n                props.editBoardAndStikeys(Object.assign({}, data, { _id: props.activeBoard._id }));\n            } else {\n                //\n            }\n        } catch (e) {\n            props.showAlertDialog({\n                open: true,\n                title: 'Error',\n                message: e.message || String(e),\n                singleButton: true,\n                colorIsSecondary: true,\n                onClose: () => props.closeAlertDialog(),\n            });\n        }\n    }\n    //видалення\n    function handleConfirmDeleting(apply: boolean) {\n        setConfirmDeletingOpen(false);\n        if (apply) {\n            props.deleteBoard(props.activeBoard._id);\n        }\n    }\n    //зміни\n    function handleEditorChange(editor: any, data: any, value: string) {\n        setEditorValue(value);\n        setEditCount(editCount + 1);\n    }\n    // перевірка дошки на існування\n    if (props.match.params.id) {\n        if (props.activeBoard._id !== props.match.params.id) {\n            const index = props.boards.findIndex(x => x._id === props.match.params.id);\n            props.changeActiveBoard(props.match.params.id);\n            return (\n                <div className={classes.root}>\n                    {index < 0 ?\n                        <>\n                            <Typography\n                                style={{marginTop: theme.spacing(10)}}\n                                variant=\"h4\" align=\"center\">\n                                Не знайдено дошку.\n                            </Typography>\n                            <Typography\n                                style={{marginTop: theme.spacing(5), cursor: 'pointer', textDecoration: 'underline'}}\n                                variant=\"body1\" align=\"center\"\n                                onClick={ev => {props.history.push('/')}} >\n                                Нажміть сюди, щоб повернутись назад.\n                            </Typography>\n                        </> :\n                        <></>\n                    }\n                </div>\n            );\n        }\n    }\n    //сторінка\n    return (\n        <div className={clsx(classes.root)}>\n            <div className={clsx(classes.header)}>\n                <Typography variant=\"h6\" align=\"center\" style={{marginTop: '0px'}}>{props.activeBoard.name}</Typography>\n                <Button\n                    className={clsx(classes.fabSave)}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={editCount === 0}\n                    onClick={handleSaveClick} >\n                    <CheckIcon />\n                    <Typography variant=\"body1\" style={{marginLeft: theme.spacing(1)}} >\n                        Зберегти\n                    </Typography>\n                </Button>\n                {props.boards.length > 1 ?\n                    <Button\n                        className={clsx(classes.fabDelete)}\n                        variant=\"outlined\"\n                        color=\"secondary\"\n                        onClick={ev => setConfirmDeletingOpen(true)} >\n                        <DeleteIcon color=\"secondary\" />\n                        <Typography variant=\"body1\" color=\"secondary\" style={{marginLeft: theme.spacing(1)}} >\n                            Видалити\n                        </Typography>\n                    </Button> :\n                    <></>\n                }\n            </div>\n            <div>\n                <CodeMirror\n                    className={clsx(classes.codemirror)}\n                    value={`# Налаштування\\n\\n${\n                        jsYaml.safeDump(pickEditableBoardProps(props.activeBoard), {lineWidth: 1000})\n                    }`}\n                    options={{\n                        mode: 'yaml',\n                        theme: 'material',\n                        lineNumbers: true,\n                        lineWrapping: true,\n                    }}\n                    onChange={handleEditorChange}\n                />\n            </div>\n            {confirmDeletingOpen ?\n                <ConfirmDialog\n                    open={confirmDeletingOpen}\n                    title=\"Видалити дошку\"\n                    message=\"Ви впевнені, що хочете видалити дошку?\"\n                    colorIsSecondary={true}\n                    applyButtonCaption=\"Видалити\"\n                    confirmingTextLabel={'Введіть \"Видалити\" для видалення цієї дошки.'}\n                    confirmingTextValue=\"Видалити\"\n                    fab={\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"delete\" color=\"secondary\" style={{margin: 'auto'}}>\n                            <DeleteIcon />\n                        </Fab>\n                    }\n                    onClose={handleConfirmDeleting} /> :\n                <></>\n            }\n        </div>\n    );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorView);\n","import React                          from 'react';\nimport { connect }                    from 'react-redux';\nimport { RouteComponentProps }        from 'react-router-dom';\nimport { makeStyles,\n         useTheme }                   from '@material-ui/core/styles';\nimport Button                         from '@material-ui/core/Button';\nimport CheckIcon                      from '@material-ui/icons/Check';\nimport DeleteIcon                     from '@material-ui/icons/Delete';\nimport Typography                     from '@material-ui/core/Typography';\nimport Fab                            from '@material-ui/core/Fab';\nimport clsx                           from 'clsx';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport                                     'codemirror/lib/codemirror.css';\nimport                                     'codemirror/theme/material.css';\nimport                                     'codemirror/mode/yaml/yaml';\nimport jsYaml                         from 'js-yaml';\nimport { AppEventsState }             from '../types';\nimport { mapDispatchToProps,\n         mapStateToProps,\n         AppEventsActions }           from '../dispatchers/AppEventsDispatcher';\nimport ConfirmDialog                  from '../components/ConfirmDialog';\nimport { pickEditableConfigProps,\n         validateConfigProps }        from '../lib/validation';\nimport                                     './SettingsView.css';\n\n\n//Типи параметрів\ntype SettingsViewProps = AppEventsState & AppEventsActions & RouteComponentProps<{id: string}> & {\n};\n\n//Стилі\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        color: 'var(--main-text-color)',\n        backgroundColor: 'var(--main-bg-color)',\n        width: '100%',\n        height: '100%',\n    },\n    header: {\n        height: '45px',\n        position: 'relative',\n    },\n    codemirror: {\n        display: 'grid',\n        width: 'calc(100% - 20px)',\n        height: 'calc(100vh - 65px)',\n    },\n    fabSave: {\n        position: 'absolute',\n        margin: theme.spacing(1),\n        left: theme.spacing(1),\n        top: theme.spacing(1) / 10,\n    },\n    fabDelete: {\n        position: 'absolute',\n        margin: theme.spacing(1),\n        right: theme.spacing(1),\n        top: theme.spacing(1) / 10,\n    },\n}));\n\n//Визначення компонентів\nconst SettingsView: React.FC<SettingsViewProps> = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [confirmResetAppOpen, setConfirmResetAppOpen] = React.useState(false);\n    const [editorValue, setEditorValue] = React.useState('');\n    const [editCount, setEditCount] = React.useState(0);\n    //Кнопка \"зберегти\"\n    function handleSaveClick() {\n        try {\n            const data = jsYaml.safeLoad(editorValue); //завантаження\n            if (data) {\n                validateConfigProps(data);//валідація\n                props.updateAppConfig(Object.assign({}, data)); //оновлення\n            } else {\n                throw new Error('error.');\n            }\n        } catch (e) {\n            props.showAlertDialog({\n                open: true,\n                title: 'Error',\n                message: e.message || String(e),\n                singleButton: true,\n                colorIsSecondary: true,\n                onClose: () => props.closeAlertDialog(),\n            });\n        }\n    }\n    // функція перезавантаження додатку при підтвердженні\n    function handleConfirmResetApplication(apply: boolean) {\n        setConfirmResetAppOpen(false);\n        if (apply) {\n            props.resetApplication();\n        }\n    }\n    // лічильник редагувань\n    function handleEditorChange(editor: any, data: any, value: string) {\n        setEditorValue(value);\n        setEditCount(editCount + 1);\n    }\n    //сторінка\n    return (\n        <div className={clsx(classes.root)}>\n            <div className={clsx(classes.header)}>\n                <Typography variant=\"h6\" align=\"center\" style={{marginTop: '0px'}}>{'Налаштування додатку'}</Typography>\n                <Button\n                    className={clsx(classes.fabSave)}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    disabled={editCount === 0}\n                    onClick={handleSaveClick} >\n                    <CheckIcon />\n                    <Typography variant=\"body1\" style={{marginLeft: theme.spacing(1)}} >\n                        Зберегти    \n                    </Typography>\n                </Button>\n                <Button\n                    className={clsx(classes.fabDelete)}\n                    variant=\"outlined\"\n                    color=\"secondary\"\n                    onClick={ev => setConfirmResetAppOpen(true)} >\n                    <DeleteIcon color=\"secondary\" />\n                    <Typography variant=\"body1\" color=\"secondary\" style={{marginLeft: theme.spacing(1)}} >\n                        Перезавантажити додаток\n                    </Typography>\n                </Button>\n            </div>\n            <div>\n                <CodeMirror\n                    className={clsx(classes.codemirror)}\n                    value={`# App settings\\n\\n${\n                        jsYaml.safeDump(pickEditableConfigProps(props.appConfig), {lineWidth: 1000})\n                    }`}\n                    options={{\n                        mode: 'yaml',\n                        theme: 'material',\n                        lineNumbers: true,\n                        lineWrapping: true,\n                    }}\n                    onChange={handleEditorChange}\n                />\n            </div>\n            {confirmResetAppOpen ?\n                <ConfirmDialog\n                    open={confirmResetAppOpen}\n                    title=\"Перезавантажити додаток\"\n                    message={'Ви впевнені, що хочете перезавантажити додаток, усі локальні змінні буде знищено!'}\n                    colorIsSecondary={true}\n                    applyButtonCaption=\"Перезавантажити\"\n                    confirmingTextLabel={'Введіть\"Перезавантажити\" для підтвердження .'}\n                    confirmingTextValue=\"Перезавантажити\"\n                    fab={\n                        <Fab size=\"large\" variant=\"round\" aria-label=\"reset application\" color=\"secondary\" style={{margin: 'auto'}}>\n                            <DeleteIcon />\n                        </Fab>\n                    }\n                    onClose={handleConfirmResetApplication} /> :\n                <></>\n            }\n        </div>\n    );\n}// підключення до сховища\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsView);\n","\nimport React                from 'react';\nimport { connect }          from 'react-redux';\nimport { Route,\n         Switch }           from \"react-router-dom\";\nimport CssBaseline          from '@material-ui/core/CssBaseline';\nimport { makeStyles }       from '@material-ui/core/styles';\nimport { ThemeProvider }    from '@material-ui/styles';\nimport clsx                 from 'clsx';\nimport { AppEventsState }   from './types';\nimport { theme }            from './lib/theme';\nimport { mapDispatchToProps,\n         mapStateToProps,\n         AppEventsActions } from './dispatchers/AppEventsDispatcher';\nimport AppDrawer            from './components/AppDrawer';\nimport KanbanBoardView      from './views/KanbanBoardView';\nimport CalendarView         from './views/CalendarView';\nimport EditorView           from './views/EditorView';\nimport SettingsView         from './views/SettingsView';\nimport ConfirmDialog        from './components/ConfirmDialog';\n\n\n\ntype AppProps = AppEventsState & AppEventsActions;\n\n\nconst useStyles = makeStyles(theme => ({\n    app: {\n        display: 'flex',\n    },\n}));\n\n\nconst App: React.FC<AppProps> = (props) => {\n    const classes = useStyles();\n // рендер компонентів\n    return (\n        <div className={clsx(classes.app)}>\n            <CssBaseline />\n            <ThemeProvider theme={theme}>\n                <AppDrawer />\n                <Switch>\n                    <Route path=\"/\" exact component={KanbanBoardView} />\n                    <Route path=\"/kanban/:id?\" component={KanbanBoardView} />\n                    <Route path=\"/calendar/:id?\" component={CalendarView} />\n                    <Route path=\"/edit/:id?\" component={EditorView} />\n                    <Route path=\"/config/\" component={SettingsView} />\n                </Switch>\n                {props.alertDialog.open ?\n                    <ConfirmDialog {...props.alertDialog} /> :\n                    <></>\n                }\n            </ThemeProvider>\n        </div>\n    );\n} // підключення компонентів до сховища\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    \n    window.location.hostname === '[::1]' ||\n    \n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n   \n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      \n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        \n        checkValidServiceWorker(swUrl, config);\n\n        \n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              \n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              \n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n            \n              console.log('Content is cached for offline use.');\n\n             \n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  \n  fetch(swUrl)\n    .then(response => {\n      \n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        \n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React                    from 'react';\nimport ReactDOM                 from 'react-dom';\nimport { Provider }             from 'react-redux';\nimport { ConnectedRouter }      from 'connected-react-router'\nimport { getLocalDb }           from './lib/db'\nimport                               './index.css';\nimport App                      from './App';\nimport * as serviceWorker       from './serviceWorker';\nimport getAppStore,\n       { history }              from './store';\n\n\n\n(async () => {\n    getLocalDb(); //БД\n    //Запуск усіх компонентів\n    ReactDOM.render(\n        <Provider store={await getAppStore()}>\n            <ConnectedRouter history={history}>\n                <App /> \n            </ConnectedRouter>\n        </Provider>,\n        document.getElementById('root')); //html рендер\n\n   \n\n    serviceWorker.unregister();\n    // serviceWorker.register();\n})();\n"],"sourceRoot":""}